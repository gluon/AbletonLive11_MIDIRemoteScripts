#Embedded file name: /Users/versonator/Jenkins/live/output/Live/mac_64_static/Release/python-bundle/MIDI Remote Scripts/ableton/v2/control_surface/default_bank_definitions.py
from __future__ import absolute_import, print_function, unicode_literals
from ableton.v2.base.collection import IndexedDict
from ableton.v2.control_surface import BANK_MAIN_KEY, BANK_PARAMETERS_KEY, use
RACK_BANKS = IndexedDict(((u'Macros', {BANK_PARAMETERS_KEY: (u'Macro 1',
                         u'Macro 2',
                         u'Macro 3',
                         u'Macro 4',
                         u'Macro 5',
                         u'Macro 6',
                         u'Macro 7',
                         u'Macro 8')}), (u'Macros 2', {BANK_PARAMETERS_KEY: (u'Macro 9',
                         u'Macro 10',
                         u'Macro 11',
                         u'Macro 12',
                         u'Macro 13',
                         u'Macro 14',
                         u'Macro 15',
                         u'Macro 16')})))
BANK_DEFINITIONS = {u'AudioEffectGroupDevice': RACK_BANKS,
 u'MidiEffectGroupDevice': RACK_BANKS,
 u'InstrumentGroupDevice': RACK_BANKS,
 u'DrumGroupDevice': RACK_BANKS,
 u'UltraAnalog': IndexedDict(((BANK_MAIN_KEY, {BANK_PARAMETERS_KEY: (use(u'OSC1 Shape').if_parameter(u'OSC1 On/Off').has_value(u'On').else_use(u'OSC2 Shape').if_parameter(u'OSC2 On/Off').has_value(u'On'),
                                          use(u'OSC1 Octave').if_parameter(u'OSC1 On/Off').has_value(u'On').else_use(u'OSC2 Octave').if_parameter(u'OSC2 On/Off').has_value(u'On'),
                                          use(u'OSC2 Shape').if_parameter(u'OSC1 On/Off').has_value(u'On').and_parameter(u'OSC2 On/Off').has_value(u'On').else_use(u'OSC1 Semi').if_parameter(u'OSC1 On/Off').has_value(u'On').else_use(u'OSC2 Semi').if_parameter(u'OSC2 On/Off').has_value(u'On'),
                                          use(u'OSC2 Octave').if_parameter(u'OSC1 On/Off').has_value(u'On').and_parameter(u'OSC2 On/Off').has_value(u'On').else_use(u'OSC1 Detune').if_parameter(u'OSC1 On/Off').has_value(u'On').else_use(u'OSC2 Detune').if_parameter(u'OSC2 On/Off').has_value(u'On'),
                                          use(u'F1 Type').if_parameter(u'F1 On/Off').has_value(u'On').else_use(u'F2 Type').if_parameter(u'F2 On/Off').has_value(u'On'),
                                          use(u'F1 Freq').if_parameter(u'F1 On/Off').has_value(u'On').else_use(u'F2 Freq').if_parameter(u'F2 On/Off').has_value(u'On'),
                                          use(u'F1 Resonance').if_parameter(u'F1 On/Off').has_value(u'On').else_use(u'F2 Resonance').if_parameter(u'F2 On/Off').has_value(u'On'),
                                          u'Volume')}),
                  (u'Osc. 1 Shape', {BANK_PARAMETERS_KEY: (u'OSC1 On/Off',
                                          use(u'OSC1 Shape').if_parameter(u'OSC1 On/Off').has_value(u'On'),
                                          use(u'').if_parameter(u'OSC1 On/Off').has_value(u'Off').else_use(u'OSC1 PW').if_parameter(u'OSC1 Shape').has_value(u'Rect'),
                                          use(u'').if_parameter(u'OSC1 On/Off').has_value(u'Off').else_use(u'O1 PW < LFO').if_parameter(u'OSC1 Shape').has_value(u'Rect').else_use(u'').if_parameter(u'LFO1 On/Off').has_value(u'Off'),
                                          use(u'').if_parameter(u'OSC1 On/Off').has_value(u'Off').else_use(u'').if_parameter(u'OSC1 Shape').has_value(u'Noise').else_use(u'').if_parameter(u'OSC1 Shape').has_value(u'Sine').else_use(u'OSC1 Mode'),
                                          use(u'').if_parameter(u'OSC1 On/Off').has_value(u'Off').else_use(u'').if_parameter(u'OSC1 Shape').has_value(u'Noise').else_use(u'O1 Sub/Sync'),
                                          use(u'OSC1 Balance').if_parameter(u'OSC1 On/Off').has_value(u'On'),
                                          use(u'OSC1 Level').if_parameter(u'OSC1 On/Off').has_value(u'On'))}),
                  (u'Osc. 1 Pitch', {BANK_PARAMETERS_KEY: (u'OSC1 On/Off',
                                          use(u'OSC1 Octave').if_parameter(u'OSC1 On/Off').has_value(u'On'),
                                          use(u'OSC1 Semi').if_parameter(u'OSC1 On/Off').has_value(u'On'),
                                          use(u'OSC1 Detune').if_parameter(u'OSC1 On/Off').has_value(u'On'),
                                          use(u'PEG1 Amount').if_parameter(u'OSC1 On/Off').has_value(u'On'),
                                          use(u'PEG1 Time').if_parameter(u'OSC1 On/Off').has_value(u'On'),
                                          use(u'O1 Keytrack').if_parameter(u'OSC1 On/Off').has_value(u'On'),
                                          use(u'').if_parameter(u'OSC1 On/Off').has_value(u'Off').else_use(u'').if_parameter(u'LFO1 On/Off').has_value(u'Off').else_use(u'OSC1 < LFO'))}),
                  (u'Osc. 2 Shape', {BANK_PARAMETERS_KEY: (u'OSC2 On/Off',
                                          use(u'OSC2 Shape').if_parameter(u'OSC2 On/Off').has_value(u'On'),
                                          use(u'').if_parameter(u'OSC2 On/Off').has_value(u'Off').else_use(u'OSC2 PW').if_parameter(u'OSC2 Shape').has_value(u'Rect'),
                                          use(u'').if_parameter(u'OSC2 On/Off').has_value(u'Off').else_use(u'O2 PW < LFO').if_parameter(u'OSC2 Shape').has_value(u'Rect').else_use(u'').if_parameter(u'LFO2 On/Off').has_value(u'Off'),
                                          use(u'').if_parameter(u'OSC2 On/Off').has_value(u'Off').else_use(u'').if_parameter(u'OSC2 Shape').has_value(u'Noise').else_use(u'').if_parameter(u'OSC2 Shape').has_value(u'Sine').else_use(u'OSC2 Mode'),
                                          use(u'').if_parameter(u'OSC2 On/Off').has_value(u'Off').else_use(u'').if_parameter(u'OSC2 Shape').has_value(u'Noise').else_use(u'O2 Sub/Sync'),
                                          use(u'OSC2 Balance').if_parameter(u'OSC2 On/Off').has_value(u'On'),
                                          use(u'OSC2 Level').if_parameter(u'OSC2 On/Off').has_value(u'On'))}),
                  (u'Osc. 2 Pitch', {BANK_PARAMETERS_KEY: (u'OSC2 On/Off',
                                          use(u'OSC2 Octave').if_parameter(u'OSC2 On/Off').has_value(u'On'),
                                          use(u'OSC2 Semi').if_parameter(u'OSC2 On/Off').has_value(u'On'),
                                          use(u'OSC2 Detune').if_parameter(u'OSC2 On/Off').has_value(u'On'),
                                          use(u'PEG2 Amount').if_parameter(u'OSC2 On/Off').has_value(u'On'),
                                          use(u'PEG2 Time').if_parameter(u'OSC2 On/Off').has_value(u'On'),
                                          use(u'O2 Keytrack').if_parameter(u'OSC2 On/Off').has_value(u'On'),
                                          use(u'').if_parameter(u'OSC2 On/Off').has_value(u'Off').else_use(u'').if_parameter(u'LFO2 On/Off').has_value(u'Off').else_use(u'OSC2 < LFO'))}),
                  (u'Filters', {BANK_PARAMETERS_KEY: (u'F1 On/Off',
                                          use(u'F1 Type').if_parameter(u'F1 On/Off').has_value(u'On'),
                                          use(u'F1 Freq').if_parameter(u'F1 On/Off').has_value(u'On'),
                                          use(u'F1 Resonance').if_parameter(u'F1 On/Off').has_value(u'On'),
                                          u'F2 On/Off',
                                          use(u'F2 Type').if_parameter(u'F2 On/Off').has_value(u'On'),
                                          use(u'F2 Freq').if_parameter(u'F2 On/Off').has_value(u'On'),
                                          use(u'F2 Resonance').if_parameter(u'F2 On/Off').has_value(u'On'))}),
                  (u'Filt. 1 Env.', {BANK_PARAMETERS_KEY: (u'F1 On/Off',
                                          use(u'FEG1 < Vel').if_parameter(u'F1 On/Off').has_value(u'On'),
                                          use(u'FEG1 A < Vel').if_parameter(u'F1 On/Off').has_value(u'On'),
                                          use(u'FEG1 Attack').if_parameter(u'F1 On/Off').has_value(u'On'),
                                          use(u'FEG1 Decay').if_parameter(u'F1 On/Off').has_value(u'On'),
                                          use(u'FEG1 Sustain').if_parameter(u'F1 On/Off').has_value(u'On'),
                                          use(u'FEG1 S Time').if_parameter(u'F1 On/Off').has_value(u'On'),
                                          use(u'FEG1 Rel').if_parameter(u'F1 On/Off').has_value(u'On'))}),
                  (u'Filt. 2 Env.', {BANK_PARAMETERS_KEY: (u'F2 On/Off',
                                          use(u'FEG2 < Vel').if_parameter(u'F2 On/Off').has_value(u'On'),
                                          use(u'FEG2 A < Vel').if_parameter(u'F2 On/Off').has_value(u'On'),
                                          use(u'FEG2 Attack').if_parameter(u'F2 On/Off').has_value(u'On'),
                                          use(u'FEG2 Decay').if_parameter(u'F2 On/Off').has_value(u'On'),
                                          use(u'FEG2 Sustain').if_parameter(u'F2 On/Off').has_value(u'On'),
                                          use(u'FEG2 S Time').if_parameter(u'F2 On/Off').has_value(u'On'),
                                          use(u'FEG2 Rel').if_parameter(u'F2 On/Off').has_value(u'On'))}),
                  (u'Filt. Modulation', {BANK_PARAMETERS_KEY: (u'F1 On/Off',
                                          use(u'F1 Freq < LFO').if_parameter(u'F1 On/Off').has_value(u'On'),
                                          use(u'F1 Freq < Env').if_parameter(u'F1 On/Off').has_value(u'On'),
                                          use(u'F1 Res < LFO').if_parameter(u'F1 On/Off').has_value(u'On'),
                                          u'F2 On/Off',
                                          use(u'F2 Freq < LFO').if_parameter(u'F2 On/Off').has_value(u'On'),
                                          use(u'F2 Freq < Env').if_parameter(u'F2 On/Off').has_value(u'On'),
                                          use(u'F2 Res < LFO').if_parameter(u'F2 On/Off').has_value(u'On'))}),
                  (u'Amp', {BANK_PARAMETERS_KEY: (use(u'AMP1 Level').if_parameter(u'AMP1 On/Off').has_value(u'On'),
                                          use(u'AMP1 Pan').if_parameter(u'AMP1 On/Off').has_value(u'On'),
                                          use(u'AMP1 < LFO').if_parameter(u'AMP1 On/Off').has_value(u'On'),
                                          use(u'').if_parameter(u'LFO1 On/Off').has_value(u'Off').else_use(u'LFO1 Speed').if_parameter(u'LFO1 Sync').has_value(u'Hertz').else_use(u'LFO1 SncRate'),
                                          use(u'AMP2 Level').if_parameter(u'AMP2 On/Off').has_value(u'On'),
                                          use(u'AMP2 Pan').if_parameter(u'AMP2 On/Off').has_value(u'On'),
                                          use(u'AMP2 < LFO').if_parameter(u'AMP2 On/Off').has_value(u'On'),
                                          use(u'').if_parameter(u'LFO2 On/Off').has_value(u'Off').else_use(u'LFO2 Speed').if_parameter(u'LFO2 Sync').has_value(u'Hertz').else_use(u'LFO2 SncRate'))}),
                  (u'Amp 1 Envelope', {BANK_PARAMETERS_KEY: (u'AMP1 On/Off',
                                          use(u'AEG1 < Vel').if_parameter(u'AMP1 On/Off').has_value(u'On'),
                                          use(u'AEG1 A < Vel').if_parameter(u'AMP1 On/Off').has_value(u'On'),
                                          use(u'AEG1 Attack').if_parameter(u'AMP1 On/Off').has_value(u'On'),
                                          use(u'AEG1 Decay').if_parameter(u'AMP1 On/Off').has_value(u'On'),
                                          use(u'AEG1 Sustain').if_parameter(u'AMP1 On/Off').has_value(u'On'),
                                          use(u'AEG1 S Time').if_parameter(u'AMP1 On/Off').has_value(u'On'),
                                          use(u'AEG1 Rel').if_parameter(u'AMP1 On/Off').has_value(u'On'))}),
                  (u'Amp 2 Envelope', {BANK_PARAMETERS_KEY: (u'AMP2 On/Off',
                                          use(u'AEG2 < Vel').if_parameter(u'AMP2 On/Off').has_value(u'On'),
                                          use(u'AEG2 A < Vel').if_parameter(u'AMP2 On/Off').has_value(u'On'),
                                          use(u'AEG2 Attack').if_parameter(u'AMP2 On/Off').has_value(u'On'),
                                          use(u'AEG2 Decay').if_parameter(u'AMP2 On/Off').has_value(u'On'),
                                          use(u'AEG2 Sustain').if_parameter(u'AMP2 On/Off').has_value(u'On'),
                                          use(u'AEG2 S Time').if_parameter(u'AMP2 On/Off').has_value(u'On'),
                                          use(u'AEG2 Rel').if_parameter(u'AMP2 On/Off').has_value(u'On'))}),
                  (u'Noise & Unison', {BANK_PARAMETERS_KEY: (u'Noise On/Off',
                                          use(u'Noise Level').if_parameter(u'Noise On/Off').has_value(u'On'),
                                          use(u'Noise Color').if_parameter(u'Noise On/Off').has_value(u'On'),
                                          use(u'Noise Balance').if_parameter(u'Noise On/Off').has_value(u'On'),
                                          u'Unison On/Off',
                                          use(u'Unison Detune').if_parameter(u'Unison On/Off').has_value(u'On'),
                                          use(u'Unison Delay').if_parameter(u'Unison On/Off').has_value(u'On'),
                                          u'')}),
                  (u'Performance', {BANK_PARAMETERS_KEY: (u'Glide On/Off',
                                          use(u'Glide Time').if_parameter(u'Glide On/Off').has_value(u'On'),
                                          use(u'Glide Mode').if_parameter(u'Glide On/Off').has_value(u'On'),
                                          use(u'Glide Legato').if_parameter(u'Glide On/Off').has_value(u'On'),
                                          u'PB Range',
                                          u'Key Stretch',
                                          u'Key Error',
                                          u'Voices')}),
                  (u'LFO 1', {BANK_PARAMETERS_KEY: (u'LFO1 On/Off',
                                          use(u'LFO1 Sync').if_parameter(u'LFO1 On/Off').has_value(u'On'),
                                          use(u'').if_parameter(u'LFO1 On/Off').has_value(u'Off').else_use(u'LFO1 Speed').if_parameter(u'LFO1 Sync').has_value(u'Hertz').else_use(u'LFO1 SncRate'),
                                          use(u'LFO1 Shape').if_parameter(u'LFO1 On/Off').has_value(u'On'),
                                          use(u'').if_parameter(u'LFO1 On/Off').has_value(u'Off').else_use(u'LFO1 PW').if_parameter(u'LFO1 Shape').has_value(u'Rect').else_use(u'LFO1 PW').if_parameter(u'LFO1 Shape').has_value(u'Tri'),
                                          use(u'LFO1 Phase').if_parameter(u'LFO1 On/Off').has_value(u'On'),
                                          use(u'LFO1 Delay').if_parameter(u'LFO1 On/Off').has_value(u'On'),
                                          use(u'LFO1 Fade In').if_parameter(u'LFO1 On/Off').has_value(u'On'))}),
                  (u'LFO 2', {BANK_PARAMETERS_KEY: (u'LFO2 On/Off',
                                          use(u'LFO2 Sync').if_parameter(u'LFO2 On/Off').has_value(u'On'),
                                          use(u'').if_parameter(u'LFO2 On/Off').has_value(u'Off').else_use(u'LFO2 Speed').if_parameter(u'LFO2 Sync').has_value(u'Hertz').else_use(u'LFO2 SncRate'),
                                          use(u'LFO2 Shape').if_parameter(u'LFO2 On/Off').has_value(u'On'),
                                          use(u'').if_parameter(u'LFO2 On/Off').has_value(u'Off').else_use(u'LFO2 PW').if_parameter(u'LFO2 Shape').has_value(u'Rect').else_use(u'LFO2 PW').if_parameter(u'LFO2 Shape').has_value(u'Tri'),
                                          use(u'LFO2 Phase').if_parameter(u'LFO2 On/Off').has_value(u'On'),
                                          use(u'LFO2 Delay').if_parameter(u'LFO2 On/Off').has_value(u'On'),
                                          use(u'LFO2 Fade In').if_parameter(u'LFO2 On/Off').has_value(u'On'))}),
                  (u'Vibrato', {BANK_PARAMETERS_KEY: (u'Vib On/Off',
                                          use(u'Vib Amount').if_parameter(u'Vib On/Off').has_value(u'On'),
                                          use(u'Vib Speed').if_parameter(u'Vib On/Off').has_value(u'On'),
                                          use(u'Vib Delay').if_parameter(u'Vib On/Off').has_value(u'On'),
                                          use(u'Vib Fade-In').if_parameter(u'Vib On/Off').has_value(u'On'),
                                          use(u'Vib Error').if_parameter(u'Vib On/Off').has_value(u'On'),
                                          use(u'Vib < ModWh').if_parameter(u'Vib On/Off').has_value(u'On'),
                                          u'')}))),
 u'ChannelEq': IndexedDict(((BANK_MAIN_KEY, {BANK_PARAMETERS_KEY: (u'Highpass On',
                                        use(u'Low Gain').with_name(u'Low'),
                                        use(u'Mid Gain').with_name(u'Mid'),
                                        u'Mid Freq',
                                        use(u'High Gain').with_name(u'High'),
                                        use(u'Gain').with_name(u'Output'),
                                        u'',
                                        u'')}),)),
 u'Collision': IndexedDict(((BANK_MAIN_KEY, {BANK_PARAMETERS_KEY: (use(u'Res 1 Type').if_parameter(u'Res 1 On/Off').has_value(u'On'),
                                        use(u'').if_parameter(u'Res 1 On/Off').has_value(u'Off').else_use(u'').if_parameter(u'Res 1 Type').has_value(u'Tube').else_use(u'').if_parameter(u'Res 1 Type').has_value(u'Pipe').else_use(u'Res 1 Brightness'),
                                        use(u'').if_parameter(u'Res 1 On/Off').has_value(u'Off').else_use(u'').if_parameter(u'Res 1 Type').has_value(u'Tube').else_use(u'Res 1 Opening').if_parameter(u'Res 1 Type').has_value(u'Pipe').else_use(u'Res 1 Inharmonics'),
                                        use(u'Res 1 Decay').if_parameter(u'Res 1 On/Off').has_value(u'On'),
                                        use(u'').if_parameter(u'Res 1 On/Off').has_value(u'Off').else_use(u'Res 1 Radius').if_parameter(u'Res 1 Type').has_value(u'Tube').else_use(u'Res 1 Radius').if_parameter(u'Res 1 Type').has_value(u'Pipe').else_use(u'Res 1 Material'),
                                        use(u'Mallet Stiffness').if_parameter(u'Mallet On/Off').has_value(u'On'),
                                        use(u'Mallet Noise Amount').if_parameter(u'Mallet On/Off').has_value(u'On'),
                                        u'Volume')}),
                (u'Mix', {BANK_PARAMETERS_KEY: (use(u'Res 1 Volume').if_parameter(u'Res 1 On/Off').has_value(u'On'),
                                        use(u'Panorama').if_parameter(u'Res 1 On/Off').has_value(u'On'),
                                        use(u'Res 1 Bleed').if_parameter(u'Res 1 On/Off').has_value(u'On'),
                                        use(u'Res 2 Volume').if_parameter(u'Res 2 On/Off').has_value(u'On'),
                                        use(u'Res 2 Panorama').if_parameter(u'Res 2 On/Off').has_value(u'On'),
                                        use(u'Res 2 Bleed').if_parameter(u'Res 2 On/Off').has_value(u'On'),
                                        u'Structure',
                                        u'Volume')}),
                (u'Mallet', {BANK_PARAMETERS_KEY: (u'Mallet On/Off',
                                        use(u'Mallet Volume').if_parameter(u'Mallet On/Off').has_value(u'On'),
                                        use(u'Mallet Noise Amount').if_parameter(u'Mallet On/Off').has_value(u'On'),
                                        use(u'Mallet Stiffness').if_parameter(u'Mallet On/Off').has_value(u'On'),
                                        use(u'Mallet Noise Color').if_parameter(u'Mallet On/Off').has_value(u'On'),
                                        use(u'Mallet Modulation').if_parameter(u'Mallet On/Off').has_value(u'On'),
                                        use(u'Mallet Volume < Vel').if_parameter(u'Mallet On/Off').has_value(u'On'),
                                        use(u'Mallet Noise Amount < Vel').if_parameter(u'Mallet On/Off').has_value(u'On'))}),
                (u'Noise Envelope', {BANK_PARAMETERS_KEY: (u'Noise On/Off',
                                        use(u'Noise Volume').if_parameter(u'Noise On/Off').has_value(u'On'),
                                        use(u'Noise Volume < Key').if_parameter(u'Noise On/Off').has_value(u'On'),
                                        use(u'Noise Volume < Vel').if_parameter(u'Noise On/Off').has_value(u'On'),
                                        use(u'Noise Attack').if_parameter(u'Noise On/Off').has_value(u'On'),
                                        use(u'Noise Sustain').if_parameter(u'Noise On/Off').has_value(u'On'),
                                        use(u'Noise Decay').if_parameter(u'Noise On/Off').has_value(u'On'),
                                        use(u'Noise Release').if_parameter(u'Noise On/Off').has_value(u'On'))}),
                (u'Noise Filter', {BANK_PARAMETERS_KEY: (u'Noise On/Off',
                                        use(u'Noise Volume').if_parameter(u'Noise On/Off').has_value(u'On'),
                                        use(u'Noise Filter Type').if_parameter(u'Noise On/Off').has_value(u'On'),
                                        use(u'Noise Filter Freq').if_parameter(u'Noise On/Off').has_value(u'On'),
                                        use(u'Noise Filter Q').if_parameter(u'Noise On/Off').has_value(u'On'),
                                        use(u'Noise Freq < Key').if_parameter(u'Noise On/Off').has_value(u'On'),
                                        use(u'Noise Freq < Vel').if_parameter(u'Noise On/Off').has_value(u'On'),
                                        use(u'Noise Freq < Env').if_parameter(u'Noise On/Off').has_value(u'On'))}),
                (u'Res. 1 Body', {BANK_PARAMETERS_KEY: (u'Res 1 On/Off',
                                        use(u'Res 1 Type').if_parameter(u'Res 1 On/Off').has_value(u'On'),
                                        use(u'').if_parameter(u'Res 1 On/Off').has_value(u'Off').else_use(u'Res 1 Ratio').if_parameter(u'Res 1 Type').has_value(u'Plate').else_use(u'Res 1 Ratio').if_parameter(u'Res 1 Type').has_value(u'Membrane'),
                                        use(u'Res 1 Decay').if_parameter(u'Res 1 On/Off').has_value(u'On'),
                                        use(u'').if_parameter(u'Res 1 On/Off').has_value(u'Off').else_use(u'Res 1 Radius').if_parameter(u'Res 1 Type').has_value(u'Tube').else_use(u'Res 1 Radius').if_parameter(u'Res 1 Type').has_value(u'Pipe').else_use(u'Res 1 Material'),
                                        use(u'').if_parameter(u'Res 1 On/Off').has_value(u'Off').else_use(u'').if_parameter(u'Res 1 Type').has_value(u'Tube').else_use(u'').if_parameter(u'Res 1 Type').has_value(u'Pipe').else_use(u'Res 1 Listening L'),
                                        use(u'').if_parameter(u'Res 1 On/Off').has_value(u'Off').else_use(u'').if_parameter(u'Res 1 Type').has_value(u'Tube').else_use(u'').if_parameter(u'Res 1 Type').has_value(u'Pipe').else_use(u'Res 1 Listening R'),
                                        use(u'').if_parameter(u'Res 1 On/Off').has_value(u'Off').else_use(u'').if_parameter(u'Res 1 Type').has_value(u'Tube').else_use(u'').if_parameter(u'Res 1 Type').has_value(u'Pipe').else_use(u'Res 1 Hit'))}),
                (u'Res. 1 Tune', {BANK_PARAMETERS_KEY: (u'Res 1 On/Off',
                                        use(u'').if_parameter(u'Res 1 On/Off').has_value(u'Off').else_use(u'').if_parameter(u'Res 1 Type').has_value(u'Tube').else_use(u'').if_parameter(u'Res 1 Type').has_value(u'Pipe').else_use(u'Res 1 Brightness'),
                                        use(u'Res 1 Quality').if_parameter(u'Res 1 On/Off').has_value(u'On'),
                                        use(u'').if_parameter(u'Res 1 On/Off').has_value(u'Off').else_use(u'').if_parameter(u'Res 1 Type').has_value(u'Tube').else_use(u'Res 1 Opening').if_parameter(u'Res 1 Type').has_value(u'Pipe').else_use(u'Res 1 Inharmonics'),
                                        use(u'Res 1 Tune').if_parameter(u'Res 1 On/Off').has_value(u'On'),
                                        use(u'Res 1 Fine Tune').if_parameter(u'Res 1 On/Off').has_value(u'On'),
                                        use(u'Res 1 Pitch Env.').if_parameter(u'Res 1 On/Off').has_value(u'On'),
                                        use(u'Res 1 Pitch Env. Time').if_parameter(u'Res 1 On/Off').has_value(u'On'))}),
                (u'Res. 2 Body', {BANK_PARAMETERS_KEY: (u'Res 2 On/Off',
                                        use(u'Res 2 Type').if_parameter(u'Res 2 On/Off').has_value(u'On'),
                                        use(u'').if_parameter(u'Res 2 On/Off').has_value(u'Off').else_use(u'Res 2 Ratio').if_parameter(u'Res 2 Type').has_value(u'Plate').else_use(u'Res 2 Ratio').if_parameter(u'Res 2 Type').has_value(u'Membrane'),
                                        use(u'Res 2 Decay').if_parameter(u'Res 2 On/Off').has_value(u'On'),
                                        use(u'').if_parameter(u'Res 2 On/Off').has_value(u'Off').else_use(u'Res 2 Radius').if_parameter(u'Res 2 Type').has_value(u'Tube').else_use(u'Res 2 Radius').if_parameter(u'Res 2 Type').has_value(u'Pipe').else_use(u'Res 2 Material'),
                                        use(u'').if_parameter(u'Res 2 On/Off').has_value(u'Off').else_use(u'').if_parameter(u'Res 2 Type').has_value(u'Tube').else_use(u'').if_parameter(u'Res 2 Type').has_value(u'Pipe').else_use(u'Res 2 Listening L'),
                                        use(u'').if_parameter(u'Res 2 On/Off').has_value(u'Off').else_use(u'').if_parameter(u'Res 2 Type').has_value(u'Tube').else_use(u'').if_parameter(u'Res 2 Type').has_value(u'Pipe').else_use(u'Res 2 Listening R'),
                                        use(u'').if_parameter(u'Res 2 On/Off').has_value(u'Off').else_use(u'').if_parameter(u'Res 2 Type').has_value(u'Tube').else_use(u'').if_parameter(u'Res 2 Type').has_value(u'Pipe').else_use(u'Res 2 Hit'))}),
                (u'Res. 2 Tune', {BANK_PARAMETERS_KEY: (u'Res 2 On/Off',
                                        use(u'').if_parameter(u'Res 2 On/Off').has_value(u'Off').else_use(u'').if_parameter(u'Res 2 Type').has_value(u'Tube').else_use(u'').if_parameter(u'Res 2 Type').has_value(u'Pipe').else_use(u'Res 2 Brightness'),
                                        use(u'Res 2 Quality').if_parameter(u'Res 2 On/Off').has_value(u'On'),
                                        use(u'').if_parameter(u'Res 2 On/Off').has_value(u'Off').else_use(u'').if_parameter(u'Res 2 Type').has_value(u'Tube').else_use(u'Res 2 Opening').if_parameter(u'Res 2 Type').has_value(u'Pipe').else_use(u'Res 2 Inharmonics'),
                                        use(u'Res 2 Tune').if_parameter(u'Res 2 On/Off').has_value(u'On'),
                                        use(u'Res 2 Fine Tune').if_parameter(u'Res 2 On/Off').has_value(u'On'),
                                        use(u'Res 2 Pitch Env.').if_parameter(u'Res 2 On/Off').has_value(u'On'),
                                        use(u'Res 2 Pitch Env. Time').if_parameter(u'Res 2 On/Off').has_value(u'On'))}),
                (u'LFO 1', {BANK_PARAMETERS_KEY: (u'LFO 1 On/Off',
                                        use(u'LFO 1 Depth').if_parameter(u'LFO 1 On/Off').has_value(u'On'),
                                        use(u'LFO 1 Shape').if_parameter(u'LFO 1 On/Off').has_value(u'On'),
                                        use(u'LFO 1 Sync').if_parameter(u'LFO 1 On/Off').has_value(u'On'),
                                        use(u'').if_parameter(u'LFO 1 On/Off').has_value(u'Off').else_use(u'LFO 1 Sync Rate').if_parameter(u'LFO 1 Sync').has_value(u'Sync').else_use(u'LFO 1 Rate'),
                                        use(u'LFO 1 Offset').if_parameter(u'LFO 1 On/Off').has_value(u'On'),
                                        use(u'LFO 1 Destination A').if_parameter(u'LFO 1 On/Off').has_value(u'On'),
                                        use(u'LFO 1 Destination A Amount').if_parameter(u'LFO 1 On/Off').has_value(u'On'))}),
                (u'LFO 2', {BANK_PARAMETERS_KEY: (u'LFO 2 On/Off',
                                        use(u'LFO 2 Depth').if_parameter(u'LFO 2 On/Off').has_value(u'On'),
                                        use(u'LFO 2 Shape').if_parameter(u'LFO 2 On/Off').has_value(u'On'),
                                        use(u'LFO 2 Sync').if_parameter(u'LFO 2 On/Off').has_value(u'On'),
                                        use(u'').if_parameter(u'LFO 2 On/Off').has_value(u'Off').else_use(u'LFO 2 Sync Rate').if_parameter(u'LFO 2 Sync').has_value(u'Sync').else_use(u'LFO 2 Rate'),
                                        use(u'LFO 2 Offset').if_parameter(u'LFO 2 On/Off').has_value(u'On'),
                                        use(u'LFO 2 Destination A').if_parameter(u'LFO 2 On/Off').has_value(u'On'),
                                        use(u'LFO 2 Destination A Amount').if_parameter(u'LFO 2 On/Off').has_value(u'On'))}),
                (u'Mallet Mod.', {BANK_PARAMETERS_KEY: (u'Mallet On/Off',
                                        use(u'Mallet Volume < Key').if_parameter(u'Mallet On/Off').has_value(u'On'),
                                        use(u'Mallet Volume < Vel').if_parameter(u'Mallet On/Off').has_value(u'On'),
                                        use(u'Mallet Noise Amount < Key').if_parameter(u'Mallet On/Off').has_value(u'On'),
                                        use(u'Mallet Noise Amount < Vel').if_parameter(u'Mallet On/Off').has_value(u'On'),
                                        use(u'Mallet Stiffness < Key').if_parameter(u'Mallet On/Off').has_value(u'On'),
                                        use(u'Mallet Stiffness < Vel').if_parameter(u'Mallet On/Off').has_value(u'On'),
                                        u'')}))),
 u'LoungeLizard': IndexedDict(((BANK_MAIN_KEY, {BANK_PARAMETERS_KEY: (u'M Stiffness',
                                           u'M Force',
                                           u'Noise Amount',
                                           u'F Tine Vol',
                                           u'F Tone Vol',
                                           u'F Release',
                                           u'P Symmetry',
                                           u'Volume')}),
                   (u'Mallet', {BANK_PARAMETERS_KEY: (u'M Stiffness',
                                           u'M Force',
                                           u'Noise Pitch',
                                           u'Noise Decay',
                                           u'Noise Amount',
                                           u'M Stiff < Vel',
                                           u'M Force < Vel',
                                           u'Volume')}),
                   (u'Fork', {BANK_PARAMETERS_KEY: (u'F Tine Color',
                                           u'F Tine Decay',
                                           u'F Tine Vol',
                                           u'F Tone Vol',
                                           u'F Tone Decay',
                                           u'F Release',
                                           u'F Tine < Key',
                                           u'Volume')}),
                   (u'Damper', {BANK_PARAMETERS_KEY: (u'Damp Tone',
                                           u'Damp Balance',
                                           u'Damp Amount',
                                           u'',
                                           u'',
                                           u'',
                                           u'',
                                           u'Volume')}),
                   (u'Pickup', {BANK_PARAMETERS_KEY: (u'P Symmetry',
                                           u'P Distance',
                                           u'P Amp In',
                                           u'P Amp Out',
                                           u'Pickup Model',
                                           u'P Amp < Key',
                                           u'',
                                           u'Volume')}),
                   (u'Modulation', {BANK_PARAMETERS_KEY: (u'M Stiff < Vel',
                                           u'M Stiff < Key',
                                           u'M Force < Vel',
                                           u'M Force < Key',
                                           u'Noise < Key',
                                           u'F Tine < Key',
                                           u'P Amp < Key',
                                           u'Volume')}),
                   (u'Global', {BANK_PARAMETERS_KEY: (u'KB Stretch',
                                           u'PB Range',
                                           u'',
                                           u'',
                                           u'Voices',
                                           u'Semitone',
                                           u'Detune',
                                           u'Volume')}))),
 u'InstrumentImpulse': IndexedDict(((BANK_MAIN_KEY, {BANK_PARAMETERS_KEY: (u'1 Transpose',
                                                u'1 Volume',
                                                u'3 Transpose',
                                                u'3 Volume',
                                                u'7 Transpose',
                                                u'7 Volume',
                                                u'8 Transpose',
                                                u'8 Volume')}),
                        (u'Pad 1', {BANK_PARAMETERS_KEY: (u'1 Start',
                                                u'1 Envelope Decay',
                                                u'1 Stretch Factor',
                                                u'1 Saturator Drive',
                                                u'1 Envelope Type',
                                                u'1 Transpose',
                                                u'1 Volume <- Vel',
                                                u'1 Volume')}),
                        (u'1 Filt/Mod/Pan', {BANK_PARAMETERS_KEY: (u'1 Filter Freq',
                                                u'1 Filter Res',
                                                u'1 Filter Type',
                                                u'1 Filter <- Vel',
                                                u'1 Filter <- Random',
                                                u'1 Pan',
                                                u'1 Pan <- Vel',
                                                u'1 Pan <- Random')}),
                        (u'Pad 2', {BANK_PARAMETERS_KEY: (u'2 Start',
                                                u'2 Envelope Decay',
                                                u'2 Stretch Factor',
                                                u'2 Saturator Drive',
                                                u'2 Envelope Type',
                                                u'2 Transpose',
                                                u'2 Volume <- Vel',
                                                u'2 Volume')}),
                        (u'2 Filt/Mod/Pan', {BANK_PARAMETERS_KEY: (u'2 Filter Freq',
                                                u'2 Filter Res',
                                                u'2 Filter Type',
                                                u'2 Filter <- Vel',
                                                u'2 Filter <- Random',
                                                u'2 Pan',
                                                u'2 Pan <- Vel',
                                                u'2 Pan <- Random')}),
                        (u'Pad 3', {BANK_PARAMETERS_KEY: (u'3 Start',
                                                u'3 Envelope Decay',
                                                u'3 Stretch Factor',
                                                u'3 Saturator Drive',
                                                u'3 Envelope Type',
                                                u'3 Transpose',
                                                u'3 Volume <- Vel',
                                                u'3 Volume')}),
                        (u'3 Filt/Mod/Pan', {BANK_PARAMETERS_KEY: (u'3 Filter Freq',
                                                u'3 Filter Res',
                                                u'3 Filter Type',
                                                u'3 Filter <- Vel',
                                                u'3 Filter <- Random',
                                                u'3 Pan',
                                                u'3 Pan <- Vel',
                                                u'3 Pan <- Random')}),
                        (u'Pad 4', {BANK_PARAMETERS_KEY: (u'4 Start',
                                                u'4 Envelope Decay',
                                                u'4 Stretch Factor',
                                                u'4 Saturator Drive',
                                                u'4 Envelope Type',
                                                u'4 Transpose',
                                                u'4 Volume <- Vel',
                                                u'4 Volume')}),
                        (u'4 Filt/Mod/Pan', {BANK_PARAMETERS_KEY: (u'4 Filter Freq',
                                                u'4 Filter Res',
                                                u'4 Filter Type',
                                                u'4 Filter <- Vel',
                                                u'4 Filter <- Random',
                                                u'4 Pan',
                                                u'4 Pan <- Vel',
                                                u'4 Pan <- Random')}),
                        (u'Pad 5', {BANK_PARAMETERS_KEY: (u'5 Start',
                                                u'5 Envelope Decay',
                                                u'5 Stretch Factor',
                                                u'5 Saturator Drive',
                                                u'5 Envelope Type',
                                                u'5 Transpose',
                                                u'5 Volume <- Vel',
                                                u'5 Volume')}),
                        (u'5 Filt/Mod/Pan', {BANK_PARAMETERS_KEY: (u'5 Filter Freq',
                                                u'5 Filter Res',
                                                u'5 Filter Type',
                                                u'5 Filter <- Vel',
                                                u'5 Filter <- Random',
                                                u'5 Pan',
                                                u'5 Pan <- Vel',
                                                u'5 Pan <- Random')}),
                        (u'Pad 6', {BANK_PARAMETERS_KEY: (u'6 Start',
                                                u'6 Envelope Decay',
                                                u'6 Stretch Factor',
                                                u'6 Saturator Drive',
                                                u'6 Envelope Type',
                                                u'6 Transpose',
                                                u'6 Volume <- Vel',
                                                u'6 Volume')}),
                        (u'6 Filt/Mod/Pan', {BANK_PARAMETERS_KEY: (u'6 Filter Freq',
                                                u'6 Filter Res',
                                                u'6 Filter Type',
                                                u'6 Filter <- Vel',
                                                u'6 Filter <- Random',
                                                u'6 Pan',
                                                u'6 Pan <- Vel',
                                                u'6 Pan <- Random')}),
                        (u'Pad 7', {BANK_PARAMETERS_KEY: (u'7 Start',
                                                u'7 Envelope Decay',
                                                u'7 Stretch Factor',
                                                u'7 Saturator Drive',
                                                u'7 Envelope Type',
                                                u'7 Transpose',
                                                u'7 Volume <- Vel',
                                                u'7 Volume')}),
                        (u'7 Filt/Mod/Pan', {BANK_PARAMETERS_KEY: (u'7 Filter Freq',
                                                u'7 Filter Res',
                                                u'7 Filter Type',
                                                u'7 Filter <- Vel',
                                                u'7 Filter <- Random',
                                                u'7 Pan',
                                                u'7 Pan <- Vel',
                                                u'7 Pan <- Random')}),
                        (u'Pad 8', {BANK_PARAMETERS_KEY: (u'8 Start',
                                                u'8 Envelope Decay',
                                                u'8 Stretch Factor',
                                                u'8 Saturator Drive',
                                                u'8 Envelope Type',
                                                u'8 Transpose',
                                                u'8 Volume <- Vel',
                                                u'8 Volume')}),
                        (u'8 Filt/Mod/Pan', {BANK_PARAMETERS_KEY: (u'8 Filter Freq',
                                                u'8 Filter Res',
                                                u'8 Filter Type',
                                                u'8 Filter <- Vel',
                                                u'8 Filter <- Random',
                                                u'8 Pan',
                                                u'8 Pan <- Vel',
                                                u'8 Pan <- Random')}),
                        (u'Global', {BANK_PARAMETERS_KEY: (u'Global Time',
                                                u'Global Transpose',
                                                u'Global Volume',
                                                u'',
                                                u'',
                                                u'',
                                                u'',
                                                u'')}))),
 u'Operator': IndexedDict(((BANK_MAIN_KEY, {BANK_PARAMETERS_KEY: (use(u'Algorithm').if_parameter(u'Filter On').has_value(u'Off').else_use(u'Filter Freq'),
                                       use(u'Filter Res (Legacy)').if_parameter(u'Filter Res').is_available(False).and_parameter(u'Filter On').has_value(u'On').else_use(u'Filter Res').if_parameter(u'Filter On').has_value(u'On').else_use(u'Tone'),
                                       use(u'').if_parameter(u'Osc-A On').has_value(u'Off').else_use(u'A Coarse').if_parameter(u'A Fix On ').has_value(u'Off').else_use(u'A Fix Freq'),
                                       use(u'').if_parameter(u'Osc-A On').has_value(u'Off').else_use(u'A Fine').if_parameter(u'A Fix On ').has_value(u'Off').else_use(u'A Fix Freq Mul'),
                                       use(u'').if_parameter(u'Osc-B On').has_value(u'Off').else_use(u'B Coarse').if_parameter(u'B Fix On ').has_value(u'Off').else_use(u'B Fix Freq'),
                                       use(u'').if_parameter(u'Osc-B On').has_value(u'Off').else_use(u'B Fine').if_parameter(u'B Fix On ').has_value(u'Off').else_use(u'B Fix Freq Mul'),
                                       use(u'Osc-B Level').if_parameter(u'Osc-B On').has_value(u'On'),
                                       u'Volume')}),
               (u'Global', {BANK_PARAMETERS_KEY: (u'Time',
                                       u'Time < Key',
                                       u'Tone',
                                       u'Algorithm',
                                       u'Panorama',
                                       u'Pan < Key',
                                       u'Pan < Rnd',
                                       u'Volume')}),
               (u'Osc. A', {BANK_PARAMETERS_KEY: (u'Osc-A On',
                                       use(u'Osc-A Level').if_parameter(u'Osc-A On').has_value(u'On'),
                                       use(u'A Fix On ').if_parameter(u'Osc-A On').has_value(u'On'),
                                       use(u'').if_parameter(u'Osc-A On').has_value(u'Off').else_use(u'A Coarse').if_parameter(u'A Fix On ').has_value(u'Off').else_use(u'A Fix Freq'),
                                       use(u'').if_parameter(u'Osc-A On').has_value(u'Off').else_use(u'A Fine').if_parameter(u'A Fix On ').has_value(u'Off').else_use(u'A Fix Freq Mul'),
                                       use(u'Osc-A Wave').if_parameter(u'Osc-A On').has_value(u'On'),
                                       use(u'Osc-A Retrig').if_parameter(u'Osc-A On').has_value(u'On'),
                                       use(u'').if_parameter(u'Osc-A On').has_value(u'Off').else_use(u'Osc-A Phase').if_parameter(u'Osc-A Retrig').has_value(u'On'))}),
               (u'Osc. A Env.', {BANK_PARAMETERS_KEY: (u'Osc-A On',
                                       use(u'Ae Init').if_parameter(u'Osc-A On').has_value(u'On'),
                                       use(u'Ae Attack').if_parameter(u'Osc-A On').has_value(u'On'),
                                       use(u'Ae Peak').if_parameter(u'Osc-A On').has_value(u'On'),
                                       use(u'Ae Decay').if_parameter(u'Osc-A On').has_value(u'On'),
                                       use(u'Ae Sustain').if_parameter(u'Osc-A On').has_value(u'On'),
                                       use(u'Ae Release').if_parameter(u'Osc-A On').has_value(u'On'),
                                       use(u'Osc-A Lev < Vel').if_parameter(u'Osc-A On').has_value(u'On'))}),
               (u'Osc. B', {BANK_PARAMETERS_KEY: (u'Osc-B On',
                                       use(u'Osc-B Level').if_parameter(u'Osc-B On').has_value(u'On'),
                                       use(u'B Fix On ').if_parameter(u'Osc-B On').has_value(u'On'),
                                       use(u'').if_parameter(u'Osc-B On').has_value(u'Off').else_use(u'B Coarse').if_parameter(u'B Fix On ').has_value(u'Off').else_use(u'B Fix Freq'),
                                       use(u'').if_parameter(u'Osc-B On').has_value(u'Off').else_use(u'B Fine').if_parameter(u'B Fix On ').has_value(u'Off').else_use(u'B Fix Freq Mul'),
                                       use(u'Osc-B Wave').if_parameter(u'Osc-B On').has_value(u'On'),
                                       use(u'Osc-B Retrig').if_parameter(u'Osc-B On').has_value(u'On'),
                                       use(u'').if_parameter(u'Osc-B On').has_value(u'Off').else_use(u'Osc-B Phase').if_parameter(u'Osc-B Retrig').has_value(u'On'))}),
               (u'Osc. B Env.', {BANK_PARAMETERS_KEY: (u'Osc-B On',
                                       use(u'Be Init').if_parameter(u'Osc-B On').has_value(u'On'),
                                       use(u'Be Attack').if_parameter(u'Osc-B On').has_value(u'On'),
                                       use(u'Be Peak').if_parameter(u'Osc-B On').has_value(u'On'),
                                       use(u'Be Decay').if_parameter(u'Osc-B On').has_value(u'On'),
                                       use(u'Be Sustain').if_parameter(u'Osc-B On').has_value(u'On'),
                                       use(u'Be Release').if_parameter(u'Osc-B On').has_value(u'On'),
                                       use(u'Osc-B Lev < Vel').if_parameter(u'Osc-B On').has_value(u'On'))}),
               (u'Osc. C', {BANK_PARAMETERS_KEY: (u'Osc-C On',
                                       use(u'Osc-C Level').if_parameter(u'Osc-C On').has_value(u'On'),
                                       use(u'C Fix On ').if_parameter(u'Osc-C On').has_value(u'On'),
                                       use(u'').if_parameter(u'Osc-C On').has_value(u'Off').else_use(u'C Coarse').if_parameter(u'C Fix On ').has_value(u'Off').else_use(u'C Fix Freq'),
                                       use(u'').if_parameter(u'Osc-C On').has_value(u'Off').else_use(u'C Fine').if_parameter(u'C Fix On ').has_value(u'Off').else_use(u'C Fix Freq Mul'),
                                       use(u'Osc-C Wave').if_parameter(u'Osc-C On').has_value(u'On'),
                                       use(u'Osc-C Retrig').if_parameter(u'Osc-C On').has_value(u'On'),
                                       use(u'').if_parameter(u'Osc-C On').has_value(u'Off').else_use(u'Osc-C Phase').if_parameter(u'Osc-C Retrig').has_value(u'On'))}),
               (u'Osc. C Env.', {BANK_PARAMETERS_KEY: (u'Osc-C On',
                                       use(u'Ce Init').if_parameter(u'Osc-C On').has_value(u'On'),
                                       use(u'Ce Attack').if_parameter(u'Osc-C On').has_value(u'On'),
                                       use(u'Ce Peak').if_parameter(u'Osc-C On').has_value(u'On'),
                                       use(u'Ce Decay').if_parameter(u'Osc-C On').has_value(u'On'),
                                       use(u'Ce Sustain').if_parameter(u'Osc-C On').has_value(u'On'),
                                       use(u'Ce Release').if_parameter(u'Osc-C On').has_value(u'On'),
                                       use(u'Osc-C Lev < Vel').if_parameter(u'Osc-C On').has_value(u'On'))}),
               (u'Osc. D', {BANK_PARAMETERS_KEY: (u'Osc-D On',
                                       use(u'Osc-D Level').if_parameter(u'Osc-D On').has_value(u'On'),
                                       use(u'D Fix On ').if_parameter(u'Osc-D On').has_value(u'On'),
                                       use(u'').if_parameter(u'Osc-D On').has_value(u'Off').else_use(u'D Coarse').if_parameter(u'D Fix On ').has_value(u'Off').else_use(u'D Fix Freq'),
                                       use(u'').if_parameter(u'Osc-D On').has_value(u'Off').else_use(u'D Fine').if_parameter(u'D Fix On ').has_value(u'Off').else_use(u'D Fix Freq Mul'),
                                       use(u'Osc-D Wave').if_parameter(u'Osc-D On').has_value(u'On'),
                                       use(u'Osc-D Retrig').if_parameter(u'Osc-D On').has_value(u'On'),
                                       use(u'').if_parameter(u'Osc-D On').has_value(u'Off').else_use(u'Osc-D Phase').if_parameter(u'Osc-D Retrig').has_value(u'On'))}),
               (u'Osc. D Env.', {BANK_PARAMETERS_KEY: (u'Osc-D On',
                                       use(u'De Init').if_parameter(u'Osc-D On').has_value(u'On'),
                                       use(u'De Attack').if_parameter(u'Osc-D On').has_value(u'On'),
                                       use(u'De Peak').if_parameter(u'Osc-D On').has_value(u'On'),
                                       use(u'De Decay').if_parameter(u'Osc-D On').has_value(u'On'),
                                       use(u'De Sustain').if_parameter(u'Osc-D On').has_value(u'On'),
                                       use(u'De Release').if_parameter(u'Osc-D On').has_value(u'On'),
                                       use(u'Osc-D Lev < Vel').if_parameter(u'Osc-D On').has_value(u'On'))}),
               (u'Filter', {BANK_PARAMETERS_KEY: (u'Filter On',
                                       use(u'').if_parameter(u'Filter On').has_value(u'Off').else_use(u'Filter Type').if_parameter(u'Filter Type').is_available(True).else_use(u'Filter Type (Legacy)'),
                                       use(u'Filter Freq').if_parameter(u'Filter On').has_value(u'On'),
                                       use(u'').if_parameter(u'Filter On').has_value(u'Off').else_use(u'Filter Res').if_parameter(u'Filter Res').is_available(True).else_use(u'Filter Res (Legacy)'),
                                       use(u'').if_parameter(u'Filter On').has_value(u'Off').else_use(u'Filter Circuit - LP/HP').if_parameter(u'Filter Type').has_value(u'Lowpass').else_use(u'Filter Circuit - LP/HP').if_parameter(u'Filter Type').has_value(u'Highpass').else_use(u'Filter Circuit - BP/NO/Morph'),
                                       use(u'').if_parameter(u'Filter On').has_value(u'Off').else_use(u'Filter Morph').if_parameter(u'Filter Type').has_value(u'Morph').else_use(u'').if_parameter(u'Filter Type').has_value(u'Lowpass').and_parameter(u'Filter Circuit - LP/HP').has_value(u'Clean').else_use(u'').if_parameter(u'Filter Type').has_value(u'Highpass').and_parameter(u'Filter Circuit - LP/HP').has_value(u'Clean').else_use(u'').if_parameter(u'Filter Type').has_value(u'Bandpass').and_parameter(u'Filter Circuit - BP/NO/Morph').has_value(u'Clean').else_use(u'').if_parameter(u'Filter Type').has_value(u'Notch').and_parameter(u'Filter Circuit - BP/NO/Morph').has_value(u'Clean').else_use(u'Filter Drive'),
                                       use(u'Filter Slope').if_parameter(u'Filter On').has_value(u'On').and_parameter(u'Filter Slope').is_available(True),
                                       use(u'Filt < Vel').if_parameter(u'Filter On').has_value(u'On'))}),
               (u'Filt. Env.', {BANK_PARAMETERS_KEY: (use(u'Fe Amount').if_parameter(u'Filter On').has_value(u'On'),
                                       use(u'Fe Init').if_parameter(u'Filter On').has_value(u'On'),
                                       use(u'Fe Attack').if_parameter(u'Filter On').has_value(u'On'),
                                       use(u'Fe Peak').if_parameter(u'Filter On').has_value(u'On'),
                                       use(u'Fe Decay').if_parameter(u'Filter On').has_value(u'On'),
                                       use(u'Fe Sustain').if_parameter(u'Filter On').has_value(u'On'),
                                       use(u'Fe Release').if_parameter(u'Filter On').has_value(u'On'),
                                       use(u'Fe End').if_parameter(u'Filter On').has_value(u'On'))}),
               (u'LFO', {BANK_PARAMETERS_KEY: (u'LFO On',
                                       use(u'LFO Type').if_parameter(u'LFO On').has_value(u'On'),
                                       use(u'LFO Range').if_parameter(u'LFO On').has_value(u'On'),
                                       use(u'').if_parameter(u'LFO On').has_value(u'Off').else_use(u'LFO Sync').if_parameter(u'LFO Range').has_value(u'Sync').else_use(u'LFO Rate'),
                                       use(u'LFO Retrigger').if_parameter(u'LFO On').has_value(u'On'),
                                       use(u'LFO Amt').if_parameter(u'LFO On').has_value(u'On'),
                                       u'',
                                       u'')}),
               (u'LFO Env.', {BANK_PARAMETERS_KEY: (u'LFO On',
                                       use(u'Le Init').if_parameter(u'LFO On').has_value(u'On'),
                                       use(u'Le Attack').if_parameter(u'LFO On').has_value(u'On'),
                                       use(u'Le Peak').if_parameter(u'LFO On').has_value(u'On'),
                                       use(u'Le Decay').if_parameter(u'LFO On').has_value(u'On'),
                                       use(u'Le Sustain').if_parameter(u'LFO On').has_value(u'On'),
                                       use(u'Le Release').if_parameter(u'LFO On').has_value(u'On'),
                                       use(u'Le End').if_parameter(u'LFO On').has_value(u'On'))}),
               (u'Pitch', {BANK_PARAMETERS_KEY: (u'Transpose',
                                       u'Spread',
                                       u'Glide On',
                                       use(u'Glide Time').if_parameter(u'Glide On').has_value(u'On'),
                                       u'Pe On',
                                       use(u'Pe Amount').if_parameter(u'Pe On').has_value(u'On'),
                                       use(u'LFO < Pe').if_parameter(u'Pe On').has_value(u'On'),
                                       use(u'Pe Dst B').if_parameter(u'Pe On').has_value(u'On'))}),
               (u'Pitch Env.', {BANK_PARAMETERS_KEY: (u'Pe On',
                                       use(u'Pe Attack').if_parameter(u'Pe On').has_value(u'On'),
                                       use(u'Pe Peak').if_parameter(u'Pe On').has_value(u'On'),
                                       use(u'Pe Decay').if_parameter(u'Pe On').has_value(u'On'),
                                       use(u'Pe Sustain').if_parameter(u'Pe On').has_value(u'On'),
                                       use(u'Pe Release').if_parameter(u'Pe On').has_value(u'On'),
                                       use(u'Pe End').if_parameter(u'Pe On').has_value(u'On'),
                                       use(u'Pe R < Vel').if_parameter(u'Pe On').has_value(u'On'))}))),
 u'MultiSampler': IndexedDict(((BANK_MAIN_KEY, {BANK_PARAMETERS_KEY: (u'Ve Attack',
                                           u'Ve Decay',
                                           u'Ve Sustain',
                                           u'Ve Release',
                                           use(u'Pan').if_parameter(u'F On').has_value(u'Off').else_use(u'Filter Type').if_parameter(u'Filter Type').is_available(True).else_use(u'Filter Type (Legacy)'),
                                           use(u'Transpose').if_parameter(u'F On').has_value(u'Off').else_use(u'Filter Freq'),
                                           use(u'Detune').if_parameter(u'F On').has_value(u'Off').else_use(u'Filter Res').if_parameter(u'Filter Res').is_available(True).else_use(u'Filter Res (Legacy)'),
                                           u'Volume')}),
                   (u'Volume Env.', {BANK_PARAMETERS_KEY: (u'Ve Init',
                                           u'Ve Attack',
                                           u'Ve Peak',
                                           u'Ve Decay',
                                           u'Ve Sustain',
                                           u'Ve Release',
                                           u'Vol < Vel',
                                           u'Volume')}),
                   (u'Env. Loop & Pan', {BANK_PARAMETERS_KEY: (u'Ve Mode',
                                           use(u'Ve Loop').if_parameter(u'Ve Mode').has_value(u'Loop').else_use(u'Ve Retrig').if_parameter(u'Ve Mode').has_value(u'Beat').else_use(u'Ve Retrig').if_parameter(u'Ve Mode').has_value(u'Sync').else_use(u''),
                                           u'Ve R < Vel',
                                           u'',
                                           u'Pan',
                                           u'Pan < Rnd',
                                           u'Time',
                                           u'Time < Key')}),
                   (u'Filter', {BANK_PARAMETERS_KEY: (u'F On',
                                           use(u'').if_parameter(u'F On').has_value(u'Off').else_use(u'Filter Type').if_parameter(u'Filter Type').is_available(True).else_use(u'Filter Type (Legacy)'),
                                           use(u'').if_parameter(u'F On').has_value(u'Off').else_use(u'Filter Freq'),
                                           use(u'').if_parameter(u'F On').has_value(u'Off').else_use(u'Filter Res').if_parameter(u'Filter Res').is_available(True).else_use(u'Filter Res (Legacy)'),
                                           use(u'').if_parameter(u'F On').has_value(u'Off').else_use(u'Filter Circuit - LP/HP').if_parameter(u'Filter Type').has_value(u'Lowpass').else_use(u'Filter Circuit - LP/HP').if_parameter(u'Filter Type').has_value(u'Highpass').else_use(u'Filter Circuit - BP/NO/Morph'),
                                           use(u'').if_parameter(u'F On').has_value(u'Off').else_use(u'Filter Morph').if_parameter(u'Filter Type').has_value(u'Morph').else_use(u'').if_parameter(u'Filter Type').has_value(u'Lowpass').and_parameter(u'Filter Circuit - LP/HP').has_value(u'Clean').else_use(u'').if_parameter(u'Filter Type').has_value(u'Highpass').and_parameter(u'Filter Circuit - LP/HP').has_value(u'Clean').else_use(u'').if_parameter(u'Filter Type').has_value(u'Bandpass').and_parameter(u'Filter Circuit - BP/NO/Morph').has_value(u'Clean').else_use(u'').if_parameter(u'Filter Type').has_value(u'Notch').and_parameter(u'Filter Circuit - BP/NO/Morph').has_value(u'Clean').else_use(u'Filter Drive'),
                                           use(u'Filter Slope').if_parameter(u'F On').has_value(u'On').and_parameter(u'Filter Slope').is_available(True),
                                           use(u'Filt < Vel').if_parameter(u'F On').has_value(u'On'))}),
                   (u'Filt. Env', {BANK_PARAMETERS_KEY: (u'Fe On',
                                           use(u'Fe < Env').if_parameter(u'Fe On').has_value(u'On'),
                                           use(u'Fe Init').if_parameter(u'Fe On').has_value(u'On'),
                                           use(u'Fe Attack').if_parameter(u'Fe On').has_value(u'On'),
                                           use(u'Fe Decay').if_parameter(u'Fe On').has_value(u'On'),
                                           use(u'Fe Peak').if_parameter(u'Fe On').has_value(u'On'),
                                           use(u'Fe Sustain').if_parameter(u'Fe On').has_value(u'On'),
                                           use(u'Fe Release').if_parameter(u'Fe On').has_value(u'On'))}),
                   (u'Shaper', {BANK_PARAMETERS_KEY: (u'Fe On',
                                           use(u'Fe End').if_parameter(u'Fe On').has_value(u'On'),
                                           use(u'Fe Mode').if_parameter(u'Fe On').has_value(u'On'),
                                           use(u'').if_parameter(u'Fe On').has_value(u'Off').else_use(u'Fe Loop').if_parameter(u'Fe Mode').has_value(u'Loop').else_use(u'Fe Retrig').if_parameter(u'Fe Mode').has_value(u'Beat').else_use(u'Fe Retrig').if_parameter(u'Fe Mode').has_value(u'Sync').else_use(u''),
                                           use(u'Fe R < Vel').if_parameter(u'Fe On').has_value(u'On'),
                                           u'Shaper On',
                                           use(u'Shaper Type').if_parameter(u'Shaper On').has_value(u'On'),
                                           use(u'Shaper Amt').if_parameter(u'Shaper On').has_value(u'On'))}),
                   (u'Osc. pg. 1', {BANK_PARAMETERS_KEY: (u'Osc On',
                                           use(u'O Mode').if_parameter(u'Osc On').has_value(u'On'),
                                           use(u'Oe Init').if_parameter(u'Osc On').has_value(u'On'),
                                           use(u'Oe Attack').if_parameter(u'Osc On').has_value(u'On'),
                                           use(u'Oe Peak').if_parameter(u'Osc On').has_value(u'On'),
                                           use(u'Oe Decay').if_parameter(u'Osc On').has_value(u'On'),
                                           use(u'Oe Sustain').if_parameter(u'Osc On').has_value(u'On'),
                                           use(u'Oe Release').if_parameter(u'Osc On').has_value(u'On'))}),
                   (u'Osc. pg. 2', {BANK_PARAMETERS_KEY: (use(u'Oe End').if_parameter(u'Osc On').has_value(u'On'),
                                           use(u'Oe Mode').if_parameter(u'Osc On').has_value(u'On'),
                                           use(u'').if_parameter(u'Osc On').has_value(u'Off').else_use(u'Oe Loop').if_parameter(u'Oe Mode').has_value(u'Loop').else_use(u'Oe Retrig').if_parameter(u'Oe Mode').has_value(u'Beat').else_use(u'Oe Retrig').if_parameter(u'Oe Mode').has_value(u'Sync').else_use(u''),
                                           use(u'O Type').if_parameter(u'Osc On').has_value(u'On'),
                                           use(u'O Volume').if_parameter(u'Osc On').has_value(u'On'),
                                           use(u'O Fix On').if_parameter(u'Osc On').has_value(u'On'),
                                           use(u'').if_parameter(u'Osc On').has_value(u'Off').else_use(u'O Coarse').if_parameter(u'O Fix On').has_value(u'Off').else_use(u'O Fix Freq'),
                                           use(u'').if_parameter(u'Osc On').has_value(u'Off').else_use(u'O Fine').if_parameter(u'O Fix On').has_value(u'Off').else_use(u'O Fix Freq Mul'))}),
                   (u'Pitch Env.', {BANK_PARAMETERS_KEY: (u'Pe On',
                                           use(u'Pe < Env').if_parameter(u'Pe On').has_value(u'On'),
                                           use(u'Pe Init').if_parameter(u'Pe On').has_value(u'On'),
                                           use(u'Pe Attack').if_parameter(u'Pe On').has_value(u'On'),
                                           use(u'Pe Peak').if_parameter(u'Pe On').has_value(u'On'),
                                           use(u'Pe Decay').if_parameter(u'Pe On').has_value(u'On'),
                                           use(u'Pe Sustain').if_parameter(u'Pe On').has_value(u'On'),
                                           use(u'Pe Release').if_parameter(u'Pe On').has_value(u'On'))}),
                   (u'Pitch Env. 2', {BANK_PARAMETERS_KEY: (u'Pe On',
                                           use(u'Pe End').if_parameter(u'Pe On').has_value(u'On'),
                                           use(u'Pe R < Vel').if_parameter(u'Pe On').has_value(u'On'),
                                           use(u'Pe Mode').if_parameter(u'Pe On').has_value(u'On'),
                                           use(u'').if_parameter(u'Pe On').has_value(u'Off').else_use(u'Pe Loop').if_parameter(u'Pe Mode').has_value(u'Loop').else_use(u'Pe Retrig').if_parameter(u'Pe Mode').has_value(u'Beat').else_use(u'Pe Retrig').if_parameter(u'Pe Mode').has_value(u'Sync').else_use(u''),
                                           u'',
                                           u'',
                                           u'')}),
                   (u'Pitch/Glide', {BANK_PARAMETERS_KEY: (u'Pe On',
                                           u'Spread',
                                           u'Transpose',
                                           u'Detune',
                                           u'Key Zone Shift',
                                           u'Glide Mode',
                                           use(u'Glide Time').if_parameter(u'Glide Mode').has_value(u'On'),
                                           u'')}),
                   (u'LFO1 pg. 1', {BANK_PARAMETERS_KEY: (u'L 1 On',
                                           use(u'L 1 Wave').if_parameter(u'L 1 On').has_value(u'On'),
                                           use(u'L 1 Sync').if_parameter(u'L 1 On').has_value(u'On'),
                                           use(u'').if_parameter(u'L 1 On').has_value(u'Off').else_use(u'L 1 Sync Rate').if_parameter(u'L 1 Sync').has_value(u'Sync').else_use(u'L 1 Rate'),
                                           use(u'Vol < LFO').if_parameter(u'L 1 On').has_value(u'On'),
                                           use(u'Filt < LFO').if_parameter(u'L 1 On').has_value(u'On'),
                                           use(u'Pan < LFO').if_parameter(u'L 1 On').has_value(u'On'),
                                           use(u'Pitch < LFO').if_parameter(u'L 1 On').has_value(u'On'))}),
                   (u'LFO1 pg. 2', {BANK_PARAMETERS_KEY: (u'L 1 On',
                                           use(u'L 1 Retrig').if_parameter(u'L 1 On').has_value(u'On'),
                                           use(u'').if_parameter(u'L 1 On').has_value(u'Off').else_use(u'L 1 Offset').if_parameter(u'L 1 Retrig').has_value(u'On').else_use(u''),
                                           use(u'L 1 Attack').if_parameter(u'L 1 On').has_value(u'On'),
                                           u'',
                                           u'',
                                           u'',
                                           u'')}),
                   (u'LFO2 pg. 1', {BANK_PARAMETERS_KEY: (u'L 2 On',
                                           use(u'L 2 Wave').if_parameter(u'L 2 On').has_value(u'On'),
                                           use(u'L 2 Sync').if_parameter(u'L 2 On').has_value(u'On'),
                                           use(u'').if_parameter(u'L 2 On').has_value(u'Off').else_use(u'L 2 Sync Rate').if_parameter(u'L 2 Sync').has_value(u'Sync').else_use(u'L 2 Rate'),
                                           use(u'L 2 Retrig').if_parameter(u'L 2 On').has_value(u'On'),
                                           use(u'').if_parameter(u'L 2 On').has_value(u'Off').else_use(u'L 2 Offset').if_parameter(u'L 2 Retrig').has_value(u'On').else_use(u''),
                                           use(u'L 2 Attack').if_parameter(u'L 2 On').has_value(u'On'),
                                           u'')}),
                   (u'LFO2 pg. 2', {BANK_PARAMETERS_KEY: (u'L 2 On',
                                           use(u'L 2 St Mode').if_parameter(u'L 2 On').has_value(u'On'),
                                           use(u'').if_parameter(u'L 2 On').has_value(u'Off').else_use(u'L 2 Spin').if_parameter(u'L 2 St Mode').has_value(u'Spin').else_use(u'L 2 Phase'),
                                           u'',
                                           u'',
                                           u'',
                                           u'',
                                           u'')}),
                   (u'LFO3 pg. 1', {BANK_PARAMETERS_KEY: (u'L 3 On',
                                           use(u'L 3 Wave').if_parameter(u'L 3 On').has_value(u'On'),
                                           use(u'L 3 Sync').if_parameter(u'L 3 On').has_value(u'On'),
                                           use(u'').if_parameter(u'L 3 On').has_value(u'Off').else_use(u'L 3 Sync Rate').if_parameter(u'L 3 Sync').has_value(u'Sync').else_use(u'L 3 Rate'),
                                           use(u'L 3 Retrig').if_parameter(u'L 3 On').has_value(u'On'),
                                           use(u'').if_parameter(u'L 3 On').has_value(u'Off').else_use(u'L 3 Offset').if_parameter(u'L 3 Retrig').has_value(u'On').else_use(u''),
                                           use(u'L 3 Attack').if_parameter(u'L 3 On').has_value(u'On'),
                                           u'')}),
                   (u'LFO3 pg. 2', {BANK_PARAMETERS_KEY: (u'L 3 On',
                                           use(u'L 3 St Mode').if_parameter(u'L 3 On').has_value(u'On'),
                                           use(u'').if_parameter(u'L 3 On').has_value(u'Off').else_use(u'L 3 Spin').if_parameter(u'L 3 St Mode').has_value(u'Spin').else_use(u'L 3 Phase'),
                                           u'',
                                           u'',
                                           u'',
                                           u'',
                                           u'')}),
                   (u'Aux Env.', {BANK_PARAMETERS_KEY: (u'Ae On',
                                           use(u'Ae < Env').if_parameter(u'Ae On').has_value(u'On'),
                                           use(u'Ae Init').if_parameter(u'Ae On').has_value(u'On'),
                                           use(u'Ae Attack').if_parameter(u'Ae On').has_value(u'On'),
                                           use(u'Ae Peak').if_parameter(u'Ae On').has_value(u'On'),
                                           use(u'Ae Decay').if_parameter(u'Ae On').has_value(u'On'),
                                           use(u'Ae Sustain').if_parameter(u'Ae On').has_value(u'On'),
                                           use(u'Ae Release').if_parameter(u'Ae On').has_value(u'On'))}),
                   (u'Aux Env. 2', {BANK_PARAMETERS_KEY: (u'Ae On',
                                           use(u'Ae End').if_parameter(u'Ae On').has_value(u'Off'),
                                           use(u'Ae R < Vel').if_parameter(u'Ae On').has_value(u'Off'),
                                           use(u'Ae Mode').if_parameter(u'Ae On').has_value(u'Off'),
                                           use(u'').if_parameter(u'Ae On').has_value(u'Off').else_use(u'Ae Loop').if_parameter(u'Ae Mode').has_value(u'Loop').else_use(u'Ae Retrig').if_parameter(u'Ae Mode').has_value(u'Beat').else_use(u'Ae Retrig').if_parameter(u'Ae Mode').has_value(u'Sync').else_use(u''),
                                           u'',
                                           u'',
                                           u'')}))),
 u'OriginalSimpler': IndexedDict(((BANK_MAIN_KEY, {BANK_PARAMETERS_KEY: (use(u'Ve Attack').if_parameter(u'Multi Sample').has_value(u'On').else_use(u'Start'),
                                              use(u'Ve Decay').if_parameter(u'Multi Sample').has_value(u'On').else_use(u'End'),
                                              use(u'Ve Sustain').if_parameter(u'Multi Sample').has_value(u'On').else_use(u'Fade In').if_parameter(u'Mode').has_value(u'One-Shot').else_use(u'Nudge').if_parameter(u'Mode').has_value(u'Slicing').else_use(u'S Start').if_parameter(u'Mode').has_value(u'Classic'),
                                              use(u'Ve Release').if_parameter(u'Multi Sample').has_value(u'On').else_use(u'Fade Out').if_parameter(u'Mode').has_value(u'One-Shot').else_use(u'Playback').if_parameter(u'Mode').has_value(u'Slicing').else_use(u'S Length').if_parameter(u'Mode').has_value(u'Classic'),
                                              use(u'Pan').if_parameter(u'Multi Sample').has_value(u'On').and_parameter(u'F On').has_value(u'Off').else_use(u'Filter Type').if_parameter(u'Filter Type').is_available(True).and_parameter(u'Multi Sample').has_value(u'On').else_use(u'Filter Type (Legacy)').if_parameter(u'Multi Sample').has_value(u'On').else_use(u'Transpose').if_parameter(u'Mode').has_value(u'One-Shot').else_use(u'S Loop On').if_parameter(u'Mode').has_value(u'Classic'),
                                              use(u'Filter Freq').if_parameter(u'Multi Sample').has_value(u'On').and_parameter(u'F On').has_value(u'On').else_use(u'Transpose').if_parameter(u'Multi Sample').has_value(u'On').else_use(u'Gain').if_parameter(u'Mode').has_value(u'One-Shot').else_use(u'Slice by').if_parameter(u'Mode').has_value(u'Slicing').else_use(u'S Loop Length').if_parameter(u'Mode').has_value(u'Classic').and_parameter(u'S Loop On').has_value(u'On').else_use(u'Transpose'),
                                              use(u'Detune').if_parameter(u'Multi Sample').has_value(u'On').and_parameter(u'F On').has_value(u'Off').else_use(u'Filter Res').if_parameter(u'Filter Res').is_available(True).and_parameter(u'Multi Sample').has_value(u'On').else_use(u'Filter Res (Legacy)').if_parameter(u'Multi Sample').has_value(u'On').else_use(u'Trigger Mode').if_parameter(u'Mode').has_value(u'One-Shot').else_use(u'Sensitivity').if_parameter(u'Slice by').has_value(u'Transient').and_parameter(u'Mode').has_value(u'Slicing').else_use(u'Division').if_parameter(u'Slice by').has_value(u'Beat').and_parameter(u'Mode').has_value(u'Slicing').else_use(u'Regions').if_parameter(u'Slice by').has_value(u'Region').and_parameter(u'Mode').has_value(u'Slicing').else_use(u'Pad Slicing').if_parameter(u'Slice Style').has_value(u'Manual').and_parameter(u'Mode').has_value(u'Slicing').else_use(u'Trigger Mode').if_parameter(u'Mode').has_value(u'Slicing').else_use(u'S Loop Fade').if_parameter(u'Mode').has_value(u'Classic').and_parameter(u'Warp').has_value(u'Off').else_use(u'Detune'),
                                              use(u'Volume').if_parameter(u'Multi Sample').has_value(u'On').else_use(u'Mode'))}),
                      (u'Global', {BANK_PARAMETERS_KEY: (u'Glide Mode',
                                              use(u'').if_parameter(u'Glide Mode').has_value(u'Off').else_use(u'Glide Time'),
                                              u'Voices',
                                              u'Transpose',
                                              u'Detune',
                                              u'Vol < Vel',
                                              u'Gain',
                                              u'Volume')}),
                      (u'Volume Envelope', {BANK_PARAMETERS_KEY: (use(u'Ve Attack').if_parameter(u'Mode').has_value(u'Classic').else_use(u'Fade In'),
                                              use(u'Ve Decay').if_parameter(u'Mode').has_value(u'Classic').else_use(u'Fade Out'),
                                              use(u'Ve Sustain').if_parameter(u'Mode').has_value(u'Classic'),
                                              use(u'Ve Release').if_parameter(u'Mode').has_value(u'Classic'),
                                              u'Filt < Vel',
                                              u'Vol < Vel',
                                              u'Vol < LFO',
                                              u'Volume')}),
                      (u'Warp', {BANK_PARAMETERS_KEY: (use(u'').if_parameter(u'Multi Sample').has_value(u'On').else_use(u'Warp'),
                                              use(u'').if_parameter(u'Multi Sample').has_value(u'On').else_use(u'').if_parameter(u'Warp').has_value(u'Off').else_use(u'Warp Mode'),
                                              use(u'').if_parameter(u'Multi Sample').has_value(u'On').else_use(u'').if_parameter(u'Warp').has_value(u'Off').else_use(u'Preserve').if_parameter(u'Warp Mode').has_value(u'Beats').else_use(u'Grain Size Tones').if_parameter(u'Warp Mode').has_value(u'Tones').else_use(u'Grain Size Texture').if_parameter(u'Warp Mode').has_value(u'Texture').else_use(u'Formants').if_parameter(u'Warp Mode').has_value(u'Pro'),
                                              use(u'').if_parameter(u'Multi Sample').has_value(u'On').else_use(u'').if_parameter(u'Warp').has_value(u'Off').else_use(u'Loop Mode').if_parameter(u'Warp Mode').has_value(u'Beats').else_use(u'Flux').if_parameter(u'Warp Mode').has_value(u'Texture').else_use(u'Envelope Complex Pro').if_parameter(u'Warp Mode').has_value(u'Pro'),
                                              use(u'').if_parameter(u'Multi Sample').has_value(u'On').else_use(u'').if_parameter(u'Warp').has_value(u'Off').else_use(u'Envelope').if_parameter(u'Warp Mode').has_value(u'Beats'),
                                              u'',
                                              u'',
                                              u'')}),
                      (u'Filter', {BANK_PARAMETERS_KEY: (u'F On',
                                              use(u'').if_parameter(u'F On').has_value(u'Off').else_use(u'Filter Type').if_parameter(u'Filter Type').is_available(True).else_use(u'Filter Type (Legacy)'),
                                              use(u'Filter Freq').if_parameter(u'F On').has_value(u'On'),
                                              use(u'').if_parameter(u'F On').has_value(u'Off').else_use(u'Filter Res').if_parameter(u'Filter Res').is_available(True).else_use(u'Filter Res (Legacy)'),
                                              use(u'').if_parameter(u'F On').has_value(u'Off').else_use(u'Filter Circuit - LP/HP').if_parameter(u'Filter Type').has_value(u'Lowpass').else_use(u'Filter Circuit - LP/HP').if_parameter(u'Filter Type').has_value(u'Highpass').else_use(u'Filter Circuit - BP/NO/Morph'),
                                              use(u'').if_parameter(u'F On').has_value(u'Off').else_use(u'Filter Morph').if_parameter(u'Filter Type').has_value(u'Morph').else_use(u'').if_parameter(u'Filter Type').has_value(u'Lowpass').and_parameter(u'Filter Circuit - LP/HP').has_value(u'Clean').else_use(u'').if_parameter(u'Filter Type').has_value(u'Highpass').and_parameter(u'Filter Circuit - LP/HP').has_value(u'Clean').else_use(u'').if_parameter(u'Filter Type').has_value(u'Bandpass').and_parameter(u'Filter Circuit - BP/NO/Morph').has_value(u'Clean').else_use(u'').if_parameter(u'Filter Type').has_value(u'Notch').and_parameter(u'Filter Circuit - BP/NO/Morph').has_value(u'Clean').else_use(u'Filter Drive'),
                                              use(u'Filter Slope').if_parameter(u'F On').has_value(u'On').and_parameter(u'Filter Slope').is_available(True),
                                              use(u'Filt < LFO').if_parameter(u'F On').has_value(u'On'))}),
                      (u'Filter Envelope', {BANK_PARAMETERS_KEY: (u'Fe On',
                                              use(u'Fe Attack').if_parameter(u'Fe On').has_value(u'On'),
                                              use(u'Fe Decay').if_parameter(u'Fe On').has_value(u'On'),
                                              use(u'Fe Sustain').if_parameter(u'Fe On').has_value(u'On'),
                                              use(u'Fe Release').if_parameter(u'Fe On').has_value(u'On'),
                                              use(u'Filter Freq').if_parameter(u'Fe On').has_value(u'On').and_parameter(u'F On').has_value(u'On'),
                                              use(u'Filter Res').if_parameter(u'Fe On').has_value(u'On').and_parameter(u'F On').has_value(u'On'),
                                              use(u'Fe < Env').if_parameter(u'Fe On').has_value(u'On'))}),
                      (u'Pitch Envelope', {BANK_PARAMETERS_KEY: (u'Pe On',
                                              use(u'Pe Attack').if_parameter(u'Pe On').has_value(u'On'),
                                              use(u'Pe Decay').if_parameter(u'Pe On').has_value(u'On'),
                                              use(u'Pe Sustain').if_parameter(u'Pe On').has_value(u'On'),
                                              use(u'Pe Release').if_parameter(u'Pe On').has_value(u'On'),
                                              use(u'Pe < Env').if_parameter(u'Pe On').has_value(u'On'),
                                              u'',
                                              u'')}),
                      (u'LFO', {BANK_PARAMETERS_KEY: (u'L On',
                                              use(u'L Wave').if_parameter(u'L On').has_value(u'On'),
                                              use(u'L Sync').if_parameter(u'L On').has_value(u'On'),
                                              use(u'').if_parameter(u'L On').has_value(u'Off').else_use(u'L Rate').if_parameter(u'L Sync').has_value(u'Free').else_use(u'L Sync Rate'),
                                              use(u'L Attack').if_parameter(u'L On').has_value(u'On'),
                                              use(u'L R < Key').if_parameter(u'L On').has_value(u'On'),
                                              use(u'L Retrig').if_parameter(u'L On').has_value(u'On'),
                                              use(u'L Offset').if_parameter(u'L On').has_value(u'On'))}),
                      (u'Pan', {BANK_PARAMETERS_KEY: (u'Pan',
                                              u'Spread',
                                              u'Pan < Rnd',
                                              u'Pan < LFO',
                                              u'',
                                              u'',
                                              u'',
                                              u'')}))),
 u'StringStudio': IndexedDict(((BANK_MAIN_KEY, {BANK_PARAMETERS_KEY: (use(u'Excitator Type').if_parameter(u'Exc On/Off').has_value(u'On'),
                                           use(u'Exc ForceMassProt').if_parameter(u'Exc On/Off').has_value(u'On'),
                                           use(u'Exc FricStiff').if_parameter(u'Exc On/Off').has_value(u'On'),
                                           use(u'Exc Velocity').if_parameter(u'Exc On/Off').has_value(u'On'),
                                           use(u'E Pos').if_parameter(u'Exc On/Off').has_value(u'On'),
                                           u'String Decay',
                                           u'Str Damping',
                                           u'Volume')}),
                   (u'Excitator', {BANK_PARAMETERS_KEY: (u'Exc On/Off',
                                           use(u'Excitator Type').if_parameter(u'Exc On/Off').has_value(u'On'),
                                           use(u'Exc ForceMassProt').if_parameter(u'Exc On/Off').has_value(u'On'),
                                           use(u'Exc FricStiff').if_parameter(u'Exc On/Off').has_value(u'On'),
                                           use(u'Exc Velocity').if_parameter(u'Exc On/Off').has_value(u'On'),
                                           use(u'E Pos').if_parameter(u'Exc On/Off').has_value(u'On'),
                                           use(u'E Pos Abs').if_parameter(u'Exc On/Off').has_value(u'On'),
                                           u'Volume')}),
                   (u'String & Pickup', {BANK_PARAMETERS_KEY: (u'String Decay',
                                           u'S Decay < Key',
                                           u'S Decay Ratio',
                                           u'Str Inharmon',
                                           u'Str Damping',
                                           u'S Damp < Key',
                                           u'Pickup On/Off',
                                           use(u'Pickup Pos').if_parameter(u'Pickup On/Off').has_value(u'On'))}),
                   (u'Damper', {BANK_PARAMETERS_KEY: (u'Damper On',
                                           use(u'Damper Mass').if_parameter(u'Damper On').has_value(u'On'),
                                           use(u'D Stiffness').if_parameter(u'Damper On').has_value(u'On'),
                                           use(u'Damp Pos').if_parameter(u'Damper On').has_value(u'On'),
                                           use(u'D Damping').if_parameter(u'Damper On').has_value(u'On'),
                                           use(u'Damper Gated').if_parameter(u'Damper On').has_value(u'On'),
                                           use(u'').if_parameter(u'Damper On').has_value(u'Off').else_use(u'D Velocity').if_parameter(u'Damper Gated').has_value(u'On').else_use(u''),
                                           use(u'D Pos Abs').if_parameter(u'Damper On').has_value(u'On'))}),
                   (u'Termination', {BANK_PARAMETERS_KEY: (u'Term On/Off',
                                           use(u'Term Mass').if_parameter(u'Term On/Off').has_value(u'On'),
                                           use(u'Term Fng Stiff').if_parameter(u'Term On/Off').has_value(u'On'),
                                           use(u'Term Fret Stiff').if_parameter(u'Term On/Off').has_value(u'On'),
                                           use(u'T Mass < Vel').if_parameter(u'Term On/Off').has_value(u'On'),
                                           use(u'T Mass < Key').if_parameter(u'Term On/Off').has_value(u'On'),
                                           u'',
                                           u'Volume')}),
                   (u'Body', {BANK_PARAMETERS_KEY: (u'Body On/Off',
                                           use(u'Body Type').if_parameter(u'Body On/Off').has_value(u'On'),
                                           use(u'Body Size').if_parameter(u'Body On/Off').has_value(u'On'),
                                           use(u'Body Decay').if_parameter(u'Body On/Off').has_value(u'On'),
                                           use(u'Body Low-Cut').if_parameter(u'Body On/Off').has_value(u'On'),
                                           use(u'Body High-Cut').if_parameter(u'Body On/Off').has_value(u'On'),
                                           use(u'Body Mix').if_parameter(u'Body On/Off').has_value(u'On'),
                                           u'Volume')}),
                   (u'Filter', {BANK_PARAMETERS_KEY: (u'Filter On/Off',
                                           use(u'Filter Freq').if_parameter(u'Filter On/Off').has_value(u'On'),
                                           use(u'Filter Reso').if_parameter(u'Filter On/Off').has_value(u'On'),
                                           use(u'Filter Type').if_parameter(u'Filter On/Off').has_value(u'On'),
                                           use(u'Freq < Env').if_parameter(u'Filter On/Off').has_value(u'On'),
                                           use(u'Freq < LFO').if_parameter(u'Filter On/Off').has_value(u'On'),
                                           use(u'Reso < Env').if_parameter(u'Filter On/Off').has_value(u'On'),
                                           use(u'Reso < LFO').if_parameter(u'Filter On/Off').has_value(u'On'))}),
                   (u'LFO', {BANK_PARAMETERS_KEY: (u'LFO On/Off',
                                           use(u'LFO Shape').if_parameter(u'LFO On/Off').has_value(u'On'),
                                           use(u'LFO Sync On').if_parameter(u'LFO On/Off').has_value(u'On'),
                                           use(u'').if_parameter(u'LFO On/Off').has_value(u'Off').else_use(u'LFO SyncRate').if_parameter(u'LFO Sync On').has_value(u'Beat').else_use(u'LFO Speed'),
                                           use(u'LFO Delay').if_parameter(u'LFO On/Off').has_value(u'On'),
                                           use(u'LFO Fade In').if_parameter(u'LFO On/Off').has_value(u'On'),
                                           u'',
                                           u'')}),
                   (u'Vibrato', {BANK_PARAMETERS_KEY: (u'Vibrato On/Off',
                                           use(u'Vib Delay').if_parameter(u'Vibrato On/Off').has_value(u'On'),
                                           use(u'Vib Fade-In').if_parameter(u'Vibrato On/Off').has_value(u'On'),
                                           use(u'Vib Speed').if_parameter(u'Vibrato On/Off').has_value(u'On'),
                                           use(u'Vib Amount').if_parameter(u'Vibrato On/Off').has_value(u'On'),
                                           use(u'Vib < ModWh').if_parameter(u'Vibrato On/Off').has_value(u'On'),
                                           use(u'Vib Error').if_parameter(u'Vibrato On/Off').has_value(u'On'),
                                           u'')}),
                   (u'Unison & Portamento', {BANK_PARAMETERS_KEY: (u'Unison On/Off',
                                           use(u'Unison Voices').if_parameter(u'Unison On/Off').has_value(u'On'),
                                           use(u'Uni Delay').if_parameter(u'Unison On/Off').has_value(u'On'),
                                           use(u'Uni Detune').if_parameter(u'Unison On/Off').has_value(u'On'),
                                           u'Porta On/Off',
                                           use(u'Porta Time').if_parameter(u'Porta On/Off').has_value(u'On'),
                                           use(u'Porta Legato').if_parameter(u'Porta On/Off').has_value(u'On'),
                                           use(u'Porta Prop').if_parameter(u'Porta On/Off').has_value(u'On'))}),
                   (u'Global', {BANK_PARAMETERS_KEY: (u'Octave',
                                           u'Semitone',
                                           u'Fine Tune',
                                           u'Voices',
                                           u'PB Depth',
                                           u'Stretch',
                                           u'Error',
                                           u'Key Priority')}),
                   (u'Filt. Env.', {BANK_PARAMETERS_KEY: (u'FEG On/Off',
                                           use(u'FEG Attack').if_parameter(u'FEG On/Off').has_value(u'On'),
                                           use(u'FEG Decay').if_parameter(u'FEG On/Off').has_value(u'On'),
                                           use(u'FEG Sustain').if_parameter(u'FEG On/Off').has_value(u'On'),
                                           use(u'FEG Release').if_parameter(u'FEG On/Off').has_value(u'On'),
                                           use(u'FEG Att < Vel').if_parameter(u'FEG On/Off').has_value(u'On'),
                                           use(u'FEG < Vel').if_parameter(u'FEG On/Off').has_value(u'On'),
                                           u'')}),
                   (u'Excitator Mod.', {BANK_PARAMETERS_KEY: (use(u'Exc Prot < Vel').if_parameter(u'Exc On/Off').has_value(u'On'),
                                           use(u'Exc Prot < Key').if_parameter(u'Exc On/Off').has_value(u'On'),
                                           use(u'Exc Stiff < Vel').if_parameter(u'Exc On/Off').has_value(u'On'),
                                           use(u'Exc Stiff < Key').if_parameter(u'Exc On/Off').has_value(u'On'),
                                           use(u'Exc Vel < Vel').if_parameter(u'Exc On/Off').has_value(u'On'),
                                           use(u'Exc Vel < Key').if_parameter(u'Exc On/Off').has_value(u'On'),
                                           use(u'E Pos < Vel').if_parameter(u'Exc On/Off').has_value(u'On'),
                                           use(u'E Pos < Key').if_parameter(u'Exc On/Off').has_value(u'On'))}),
                   (u'Mass Mod.', {BANK_PARAMETERS_KEY: (use(u'D Mass < Key').if_parameter(u'Damper On').has_value(u'On'),
                                           use(u'D Stiff < Key').if_parameter(u'Damper On').has_value(u'On'),
                                           use(u'D Pos < Key').if_parameter(u'Damper On').has_value(u'On'),
                                           use(u'D Pos < Vel').if_parameter(u'Damper On').has_value(u'On'),
                                           use(u'Damper Gated').if_parameter(u'Damper On').has_value(u'On'),
                                           use(u'').if_parameter(u'Damper On').has_value(u'Off').else_use(u'D Velo < Key').if_parameter(u'Damper Gated').has_value(u'On').else_use(u''),
                                           u'',
                                           u'')}))),
 u'InstrumentVector': IndexedDict(((BANK_MAIN_KEY, {BANK_PARAMETERS_KEY: (use(u'Osc 1 Pos').with_name(u'Pos 1').if_parameter(u'Osc 1 On').has_value(u'On').else_use(u'Osc 2 Pos').with_name(u'Pos 2').if_parameter(u'Osc 2 On').has_value(u'On').else_use(u'Sub Tone').if_parameter(u'Sub On').has_value(u'On').else_use(u''),
                                               use(u'Filter 1 Freq').with_name(u'Freq 1').if_parameter(u'Filter 1 On').has_value(u'On').else_use(u'Filter 2 Freq').with_name(u'Freq 2').if_parameter(u'Filter 2 On').has_value(u'On').else_use(u'Osc 1 Effect 1').with_name(u'FX 1').if_parameter(u'Osc 1 On').has_value(u'On').else_use(u'Osc 2 Effect 1').with_name(u'FX 1').if_parameter(u'Osc 2 On').has_value(u'On').else_use(u'Osc 1 Effect 1').with_name(u'Osc1 FX1').if_parameter(u'Osc 1 On').has_value(u'Osc2 FX1').else_use(u'Osc 2 Effect 1').with_name(u'FX 1').if_parameter(u'Osc 2 On').has_value(u'On').else_use(u'Sub Transpose').if_parameter(u'Sub On').has_value(u'On').else_use(u''),
                                               use(u'Filter 1 Res').with_name(u'Res 1').if_parameter(u'Filter 1 On').has_value(u'On').else_use(u'Filter 2 Res').with_name(u'Res 2').if_parameter(u'Filter 2 On').has_value(u'On').else_use(u'Osc 1 Effect 2').with_name(u'FX 2').if_parameter(u'Osc 1 On').has_value(u'On').else_use(u'Osc 2 Effect 2').with_name(u'FX 2').if_parameter(u'Osc 2 On').has_value(u'On').else_use(u'Amp Decay').with_name(u'Decay'),
                                               use(u'Amp Release').with_name(u'Release'),
                                               u'Unison Amount',
                                               u'Time',
                                               u'Global Mod Amount',
                                               u'Volume')}),
                       (u'Osc 1', {BANK_PARAMETERS_KEY: (u'Osc 1 On',
                                               use(u'Osc 1 Pitch').with_name(u'Pitch'),
                                               use(u'Osc 1 Category').with_name(u'Category'),
                                               use(u'Osc 1 Table').with_name(u'Table'),
                                               use(u'Osc 1 Pos').with_name(u'Position'),
                                               use(u'Osc 1 Effect Type').with_name(u'Effect Type'),
                                               use(u'Osc 1 Effect 1').with_name(u'FX 1'),
                                               use(u'Osc 1 Effect 2').with_name(u'FX 2'))}),
                       (u'Osc 2', {BANK_PARAMETERS_KEY: (u'Osc 2 On',
                                               use(u'Osc 2 Pitch').with_name(u'Pitch'),
                                               use(u'Osc 2 Category').with_name(u'Category'),
                                               use(u'Osc 2 Table').with_name(u'Table'),
                                               use(u'Osc 2 Pos').with_name(u'Position'),
                                               use(u'Osc 2 Effect Type').with_name(u'Effect Type'),
                                               use(u'Osc 2 Effect 1').with_name(u'FX 1'),
                                               use(u'Osc 2 Effect 2').with_name(u'FX 2'))}),
                       (u'Sub', {BANK_PARAMETERS_KEY: (u'Sub On',
                                               use(u'Sub Transpose').with_name(u'Transp'),
                                               use(u'Sub Tone').with_name(u'Tone'),
                                               u'',
                                               u'',
                                               u'',
                                               u'',
                                               use(u'Sub Gain').with_name(u'Gain'))}),
                       (u'Mix', {BANK_PARAMETERS_KEY: (use(u'Osc 1 Pitch').with_name(u'Pitch 1'),
                                               use(u'Osc 2 Pitch').with_name(u'Pitch 2'),
                                               use(u'Sub Transpose').with_name(u'Octave Sub'),
                                               use(u'Osc 1 Pan').with_name(u'Pan 1'),
                                               use(u'Osc 2 Pan').with_name(u'Pan 2'),
                                               use(u'Osc 1 Gain').with_name(u'Gain 1'),
                                               use(u'Osc 2 Gain').with_name(u'Gain 2'),
                                               use(u'Sub Gain').with_name(u'Gain Sub'))}),
                       (u'Filter 1', {BANK_PARAMETERS_KEY: (use(u'Filter 1 On').with_name(u'F1 On'),
                                               use(u'Filter 1 Type').with_name(u'Type'),
                                               use(u'Filter 1 LP/HP').with_name(u'Circuit').if_parameter(u'Filter 1 Type').has_value(u'Lowpass').or_parameter(u'Filter 1 Type').has_value(u'Highpass').else_use(u'Filter 1 BP/NO/Morph').with_name(u'Circuit').if_parameter(u'Filter 1 Type').has_value(u'Bandpass').or_parameter(u'Filter 1 Type').has_value(u'Notch').or_parameter(u'Filter 1 Type').has_value(u'Morph').else_use(u''),
                                               use(u'Filter 1 Slope').with_name(u'Slope'),
                                               use(u'Filter 1 Freq').with_name(u'Freq'),
                                               use(u'Filter 1 Res').with_name(u'Res'),
                                               use(u'Filter 1 Drive').with_name(u'Drive').if_parameter(u'Filter 1 Type').has_value(u'Lowpass').or_parameter(u'Filter 1 Type').has_value(u'Highpass').or_parameter(u'Filter 1 Type').has_value(u'Notch').or_parameter(u'Filter 1 Type').has_value(u'Bandpass').and_parameter(u'Filter 1 LP/HP').does_not_have_value(u'Clean').else_use(u'Filter 1 Morph').with_name(u'Morph').if_parameter(u'Filter 1 Type').has_value(u'Morph').else_use(u''),
                                               u'')}),
                       (u'Filter 2', {BANK_PARAMETERS_KEY: (use(u'Filter 2 On').with_name(u'F2 On'),
                                               use(u'Filter 2 Type').with_name(u'Type'),
                                               use(u'Filter 2 LP/HP').with_name(u'Circuit').if_parameter(u'Filter 2 Type').has_value(u'Lowpass').or_parameter(u'Filter 2 Type').has_value(u'Highpass').else_use(u'Filter 2 BP/NO/Morph').with_name(u'Circuit').if_parameter(u'Filter 2 Type').has_value(u'Bandpass').or_parameter(u'Filter 2 Type').has_value(u'Notch').or_parameter(u'Filter 2 Type').has_value(u'Morph').else_use(u''),
                                               use(u'Filter 2 Slope').with_name(u'Slope'),
                                               use(u'Filter 2 Freq').with_name(u'Freq'),
                                               use(u'Filter 2 Res').with_name(u'Res'),
                                               use(u'Filter 2 Drive').with_name(u'Drive').if_parameter(u'Filter 2 Type').has_value(u'Lowpass').or_parameter(u'Filter 2 Type').has_value(u'Highpass').or_parameter(u'Filter 2 Type').has_value(u'Notch').or_parameter(u'Filter 2 Type').has_value(u'Bandpass').and_parameter(u'Filter 2 LP/HP').does_not_have_value(u'Clean').else_use(u'Filter 2 Morph').with_name(u'Morph').if_parameter(u'Filter 2 Type').has_value(u'Morph').else_use(u''),
                                               u'')}),
                       (u'Amp Env', {BANK_PARAMETERS_KEY: (use(u'Amp Attack').with_name(u'Attack'),
                                               use(u'Amp Decay').with_name(u'Decay'),
                                               use(u'Amp Sustain').with_name(u'Sustain'),
                                               use(u'Amp Release').with_name(u'Release'),
                                               use(u'Amp A Slope').with_name(u'A Slope'),
                                               use(u'Amp D Slope').with_name(u'D Slope'),
                                               use(u'Amp R Slope').with_name(u'R Slope'),
                                               use(u'Amp Loop Mode').with_name(u'Mode'))}),
                       (u'Env 2', {BANK_PARAMETERS_KEY: (use(u'Env 2 Attack').with_name(u'Attack'),
                                               use(u'Env 2 Decay').with_name(u'Decay'),
                                               use(u'Env 2 Sustain').with_name(u'Sustain'),
                                               use(u'Env 2 Release').with_name(u'Release'),
                                               use(u'Env 2 A Slope').with_name(u'A Slope'),
                                               use(u'Env 2 D Slope').with_name(u'D Slope'),
                                               use(u'Env 2 R Slope').with_name(u'R Slope'),
                                               use(u'Env 2 Loop Mode').with_name(u'Mode'))}),
                       (u'Env 3', {BANK_PARAMETERS_KEY: (use(u'Env 3 Attack').with_name(u'Attack'),
                                               use(u'Env 3 Decay').with_name(u'Decay'),
                                               use(u'Env 3 Sustain').with_name(u'Sustain'),
                                               use(u'Env 3 Release').with_name(u'Release'),
                                               use(u'Env 3 A Slope').with_name(u'A Slope'),
                                               use(u'Env 3 D Slope').with_name(u'D Slope'),
                                               use(u'Env 3 R Slope').with_name(u'R Slope'),
                                               use(u'Env 3 Loop Mode').with_name(u'Mode'))}),
                       (u'LFO 1', {BANK_PARAMETERS_KEY: (use(u'LFO 1 Shape').with_name(u'Shape'),
                                               use(u'LFO 1 Sync').with_name(u'Sync'),
                                               use(u'LFO 1 S. Rate').with_name(u'SyncRate').if_parameter(u'LFO 1 Sync').has_value(u'Tempo').else_use(u'LFO 1 Rate').with_name(u'Rate'),
                                               use(u'LFO 1 Shaping').with_name(u'Shaping'),
                                               use(u'LFO 1 Attack Time').with_name(u'Attack'),
                                               use(u'LFO 1 Amount').with_name(u'Amount'),
                                               use(u'LFO 1 Phase Offset').with_name(u'Phase'),
                                               use(u'LFO 1 Retrigger').with_name(u'Retrigger'))}),
                       (u'LFO 2', {BANK_PARAMETERS_KEY: (use(u'LFO 2 Shape').with_name(u'Shape'),
                                               use(u'LFO 2 Sync').with_name(u'Sync'),
                                               use(u'LFO 2 S. Rate').with_name(u'SyncRate').if_parameter(u'LFO 2 Sync').has_value(u'Tempo').else_use(u'LFO 2 Rate').with_name(u'Rate'),
                                               use(u'LFO 2 Shaping').with_name(u'Shaping'),
                                               use(u'LFO 2 Attack Time').with_name(u'Attack'),
                                               use(u'LFO 2 Amount').with_name(u'Amount'),
                                               use(u'LFO 2 Phase Offset').with_name(u'Phase'),
                                               use(u'LFO 2 Retrigger').with_name(u'Retrigger'))}),
                       (u'Global', {BANK_PARAMETERS_KEY: (u'Time',
                                               u'Global Mod Amount',
                                               u'Unison Mode',
                                               u'Unison Amount',
                                               u'Mono On',
                                               u'Glide',
                                               u'Transpose',
                                               u'Volume')}))),
 u'MidiArpeggiator': IndexedDict(((BANK_MAIN_KEY, {BANK_PARAMETERS_KEY: (u'Style',
                                              use(u'Synced Rate').if_parameter(u'Sync On').has_value(u'On').else_use(u'Free Rate'),
                                              u'Gate',
                                              u'Offset',
                                              u'Hold On',
                                              u'Tranpose Key',
                                              u'Transp. Steps',
                                              u'Transp. Dist.')}), (u'Rhythm', {BANK_PARAMETERS_KEY: (u'Sync On',
                                              use(u'Synced Rate').if_parameter(u'Sync On').has_value(u'On').else_use(u'Free Rate'),
                                              use(u'Groove').if_parameter(u'Sync On').has_value(u'On'),
                                              u'Offset',
                                              u'Repeats',
                                              u'Gate',
                                              u'Retrigger Mode',
                                              use(u'Ret. Interval').if_parameter(u'Retrigger Mode').has_value(u'Beat'))}), (u'Pitch/Vel.', {BANK_PARAMETERS_KEY: (u'Tranpose Mode',
                                              use(u'').if_parameter(u'Tranpose Mode').has_value(u'Shift').else_use(u'Tranpose Key'),
                                              use(u'').if_parameter(u'Tranpose Mode').has_value(u'Shift').else_use(u'Transp. Steps'),
                                              use(u'').if_parameter(u'Tranpose Mode').has_value(u'Shift').else_use(u'Transp. Dist.'),
                                              u'Velocity On',
                                              use(u'Vel. Retrigger').if_parameter(u'Velocity On').has_value(u'On'),
                                              use(u'Velocity Decay').if_parameter(u'Velocity On').has_value(u'On'),
                                              use(u'Velocity Target').if_parameter(u'Velocity On').has_value(u'On'))}))),
 u'MidiChord': IndexedDict(((u'Shift', {BANK_PARAMETERS_KEY: (u'Shift1',
                                        u'Shift2',
                                        u'Shift3',
                                        u'Shift4',
                                        u'Shift5',
                                        u'Shift6',
                                        u'',
                                        u'')}), (u'Velocity', {BANK_PARAMETERS_KEY: (u'Velocity1',
                                        u'Velocity2',
                                        u'Velocity3',
                                        u'Velocity4',
                                        u'Velocity5',
                                        u'Velocity6',
                                        u'',
                                        u'')}))),
 u'MidiNoteLength': IndexedDict(((BANK_MAIN_KEY, {BANK_PARAMETERS_KEY: (u'Trigger Mode',
                                             u'Sync On',
                                             use(u'Synced Length').if_parameter(u'Sync On').has_value(u'On').else_use(u'Time Length'),
                                             u'Gate',
                                             use(u'On/Off-Balance').if_parameter(u'Trigger Mode').has_value(u'On'),
                                             use(u'Decay Time').if_parameter(u'Trigger Mode').has_value(u'On'),
                                             use(u'Decay Key Scale').if_parameter(u'Trigger Mode').has_value(u'On'),
                                             u'')}),)),
 u'MidiPitcher': IndexedDict(((BANK_MAIN_KEY, {BANK_PARAMETERS_KEY: (u'Pitch',
                                          u'Range',
                                          u'Lowest',
                                          u'',
                                          u'',
                                          u'',
                                          u'',
                                          u'')}),)),
 u'MidiRandom': IndexedDict(((BANK_MAIN_KEY, {BANK_PARAMETERS_KEY: (u'Chance',
                                         u'Choices',
                                         u'Mode',
                                         u'Scale',
                                         u'Sign',
                                         u'',
                                         u'',
                                         u'')}),)),
 u'MidiScale': IndexedDict(((BANK_MAIN_KEY, {BANK_PARAMETERS_KEY: (u'Base',
                                        u'Transpose',
                                        u'Range',
                                        u'Lowest',
                                        u'Fold',
                                        u'',
                                        u'',
                                        u'')}),)),
 u'MidiVelocity': IndexedDict(((BANK_MAIN_KEY, {BANK_PARAMETERS_KEY: (u'Mode',
                                           use(u'').if_parameter(u'Mode').has_value(u'Fixed').else_use(u'Drive'),
                                           use(u'').if_parameter(u'Mode').has_value(u'Fixed').else_use(u'Compand'),
                                           u'Out Hi',
                                           use(u'').if_parameter(u'Mode').has_value(u'Fixed').else_use(u'Out Low'),
                                           use(u'').if_parameter(u'Mode').has_value(u'Fixed').else_use(u'Range'),
                                           use(u'').if_parameter(u'Mode').has_value(u'Fixed').else_use(u'Lowest'),
                                           u'Random')}),)),
 u'Amp': IndexedDict(((u'Global', {BANK_PARAMETERS_KEY: (u'Amp Type',
                                  u'Bass',
                                  u'Middle',
                                  u'Treble',
                                  u'Presence',
                                  u'Gain',
                                  u'Volume',
                                  u'Dry/Wet')}), (u'Dual/Mono', {BANK_PARAMETERS_KEY: (u'Dual Mono',
                                  u'',
                                  u'',
                                  u'',
                                  u'',
                                  u'',
                                  u'',
                                  u'')}))),
 u'AutoFilter': IndexedDict(((BANK_MAIN_KEY, {BANK_PARAMETERS_KEY: (use(u'Filter Type').if_parameter(u'Filter Type').is_available(True).else_use(u'Filter Type (Legacy)'),
                                         use(u'Frequency'),
                                         use(u'Resonance').if_parameter(u'Resonance').is_available(True).else_use(u'Resonance (Legacy)'),
                                         use(u'Filter Circuit - LP/HP').if_parameter(u'Filter Type').has_value(u'Lowpass').else_use(u'Filter Circuit - LP/HP').if_parameter(u'Filter Type').has_value(u'Highpass').else_use(u'Filter Circuit - BP/NO/Morph'),
                                         use(u'Morph').if_parameter(u'Filter Type').has_value(u'Morph').else_use(u'').if_parameter(u'Filter Type').has_value(u'Lowpass').and_parameter(u'Filter Circuit - LP/HP').has_value(u'Clean').else_use(u'').if_parameter(u'Filter Type').has_value(u'Highpass').and_parameter(u'Filter Circuit - LP/HP').has_value(u'Clean').else_use(u'').if_parameter(u'Filter Type').has_value(u'Bandpass').and_parameter(u'Filter Circuit - BP/NO/Morph').has_value(u'Clean').else_use(u'').if_parameter(u'Filter Type').has_value(u'Notch').and_parameter(u'Filter Circuit - BP/NO/Morph').has_value(u'Clean').else_use(u'Drive').if_parameter(u'Drive').is_available(True),
                                         u'LFO Amount',
                                         u'LFO Sync',
                                         use(u'LFO Frequency').if_parameter(u'LFO Sync').has_value(u'Free').else_use(u'LFO Sync Rate'))}),
                 (u'Envelope', {BANK_PARAMETERS_KEY: (use(u'Filter Type').if_parameter(u'Filter Type').is_available(True).else_use(u'Filter Type (Legacy)'),
                                         use(u'Frequency'),
                                         use(u'Resonance').if_parameter(u'Resonance').is_available(True).else_use(u'Resonance (Legacy)'),
                                         use(u'Slope').if_parameter(u'Slope').is_available(True),
                                         use(u'Morph').if_parameter(u'Filter Type').has_value(u'Morph').else_use(u'').if_parameter(u'Filter Type').has_value(u'Lowpass').and_parameter(u'Filter Circuit - LP/HP').has_value(u'Clean').else_use(u'').if_parameter(u'Filter Type').has_value(u'Highpass').and_parameter(u'Filter Circuit - LP/HP').has_value(u'Clean').else_use(u'').if_parameter(u'Filter Type').has_value(u'Bandpass').and_parameter(u'Filter Circuit - BP/NO/Morph').has_value(u'Clean').else_use(u'').if_parameter(u'Filter Type').has_value(u'Notch').and_parameter(u'Filter Circuit - BP/NO/Morph').has_value(u'Clean').else_use(u'Drive').if_parameter(u'Drive').is_available(True),
                                         u'Env. Attack',
                                         u'Env. Release',
                                         u'Env. Modulation')}),
                 (u'LFO', {BANK_PARAMETERS_KEY: (u'LFO Amount',
                                         u'LFO Waveform',
                                         u'LFO Sync',
                                         use(u'LFO Frequency').if_parameter(u'LFO Sync').has_value(u'Free').else_use(u'LFO Sync Rate'),
                                         use(u'').if_parameter(u'LFO Waveform').has_value(u'S&H Mono').else_use(u'LFO Offset').if_parameter(u'LFO Sync').has_value(u'Sync').else_use(u'LFO Stereo Mode'),
                                         use(u'').if_parameter(u'LFO Waveform').has_value(u'S&H Mono').else_use(u'LFO Phase').if_parameter(u'LFO Sync').has_value(u'Sync').else_use(u'LFO Phase').if_parameter(u'LFO Stereo Mode').has_value(u'Phase').else_use(u'LFO Spin'),
                                         u'LFO Quantize On',
                                         use(u'LFO Quantize Rate').if_parameter(u'LFO Quantize On').has_value(u'On'))}),
                 (u'Sidechain', {BANK_PARAMETERS_KEY: (u'S/C On',
                                         use(u'S/C Mix').if_parameter(u'S/C On').has_value(u'On'),
                                         use(u'S/C Gain').if_parameter(u'S/C On').has_value(u'On'),
                                         u'',
                                         u'',
                                         u'',
                                         u'',
                                         u'')}))),
 u'AutoPan': IndexedDict(((BANK_MAIN_KEY, {BANK_PARAMETERS_KEY: (u'Amount',
                                      u'Shape',
                                      u'Invert',
                                      u'Waveform',
                                      u'LFO Type',
                                      use(u'Sync Rate').if_parameter(u'LFO Type').has_value(u'Beats').else_use(u'Frequency'),
                                      use(u'').if_parameter(u'Waveform').has_value(u'S&H Width').else_use(u'Stereo Mode').if_parameter(u'LFO Type').has_value(u'Frequency').else_use(u'Offset'),
                                      use(u'Width (Random)').if_parameter(u'Waveform').has_value(u'S&H Width').else_use(u'Phase').if_parameter(u'LFO Type').has_value(u'Beats').else_use(u'Spin').if_parameter(u'Stereo Mode').has_value(u'Spin').else_use(u'Phase'))}),)),
 u'BeatRepeat': IndexedDict(((BANK_MAIN_KEY, {BANK_PARAMETERS_KEY: (u'Grid',
                                         u'Interval',
                                         u'Offset',
                                         u'Gate',
                                         u'Pitch',
                                         u'Pitch Decay',
                                         u'Variation',
                                         u'Chance')}), (u'Filt/Mix', {BANK_PARAMETERS_KEY: (u'Filter On',
                                         use(u'Filter Freq').if_parameter(u'Filter On').has_value(u'On'),
                                         use(u'Filter Width').if_parameter(u'Filter On').has_value(u'On'),
                                         u'',
                                         u'Mix Type',
                                         u'Volume',
                                         u'Decay',
                                         u'Chance')}), (u'Repeat Rate', {BANK_PARAMETERS_KEY: (u'Repeat',
                                         u'Interval',
                                         u'Offset',
                                         u'Gate',
                                         u'Grid',
                                         u'Block Triplets',
                                         u'Variation',
                                         u'Variation Type')}))),
 u'Cabinet': IndexedDict(((BANK_MAIN_KEY, {BANK_PARAMETERS_KEY: (u'Cabinet Type',
                                      u'Microphone Type',
                                      u'Microphone Position',
                                      u'Dual Mono',
                                      u'',
                                      u'',
                                      u'',
                                      u'Dry/Wet')}),)),
 u'Chorus': IndexedDict(((u'Chorus', {BANK_PARAMETERS_KEY: (u'LFO Amount',
                                     u'LFO Rate',
                                     u'Delay 1 Time',
                                     u'Delay 1 HiPass',
                                     u'Delay 2 Mode',
                                     use(u'').if_parameter(u'Delay 2 Mode').has_value(u'Off').else_use(u'Delay 2 Time'),
                                     u'Feedback',
                                     u'Dry/Wet')}), (u'Other', {BANK_PARAMETERS_KEY: (u'LFO Extend On',
                                     u'Polarity',
                                     u'Link On',
                                     u'',
                                     u'',
                                     u'',
                                     u'',
                                     u'')}))),
 u'Compressor2': IndexedDict(((BANK_MAIN_KEY, {BANK_PARAMETERS_KEY: (u'Threshold',
                                          use(u'Expansion Ratio').if_parameter(u'Model').has_value(u'Expand').else_use(u'Ratio'),
                                          u'Model',
                                          u'Knee',
                                          u'Attack',
                                          use(u'Release').if_parameter(u'Auto Release On/Off').has_value(u'Off').else_use(u'Makeup').if_parameter(u'S/C On').has_value(u'Off'),
                                          u'Dry/Wet',
                                          u'Output Gain')}), (u'Sidechain', {BANK_PARAMETERS_KEY: (u'S/C On',
                                          use(u'S/C Gain').if_parameter(u'S/C On').has_value(u'On'),
                                          use(u'S/C Mix').if_parameter(u'S/C On').has_value(u'On'),
                                          u'S/C Listen',
                                          u'S/C EQ On',
                                          use(u'S/C EQ Type').if_parameter(u'S/C EQ On').has_value(u'On'),
                                          use(u'S/C EQ Freq').if_parameter(u'S/C EQ On').has_value(u'On'),
                                          use(u'').if_parameter(u'S/C EQ On').has_value(u'Off').else_use(u'S/C EQ Gain').if_parameter(u'S/C EQ Type').has_value(u'Low Shelf').else_use(u'S/C EQ Gain').if_parameter(u'S/C EQ Type').has_value(u'High Shelf').else_use(u'S/C EQ Gain').if_parameter(u'S/C EQ Type').has_value(u'Bell').else_use(u'S/C EQ Q'))}), (u'Global', {BANK_PARAMETERS_KEY: (u'Auto Release On/Off',
                                          u'Env Mode',
                                          use(u'Makeup').if_parameter(u'S/C On').has_value(u'Off'),
                                          u'LookAhead',
                                          u'',
                                          u'',
                                          u'Dry/Wet',
                                          u'Output Gain')}))),
 u'Corpus': IndexedDict(((BANK_MAIN_KEY, {BANK_PARAMETERS_KEY: (u'Resonance Type',
                                     use(u'').if_parameter(u'Resonance Type').has_value(u'Tube').else_use(u'').if_parameter(u'Resonance Type').has_value(u'Pipe').else_use(u'Brightness'),
                                     u'Decay',
                                     use(u'Radius').if_parameter(u'Resonance Type').has_value(u'Tube').else_use(u'Radius').if_parameter(u'Resonance Type').has_value(u'Pipe').else_use(u'Material'),
                                     use(u'').if_parameter(u'Resonance Type').has_value(u'Tube').else_use(u'Opening').if_parameter(u'Resonance Type').has_value(u'Pipe').else_use(u'Inharmonics'),
                                     use(u'Ratio').if_parameter(u'Resonance Type').has_value(u'Plate').else_use(u'Ratio').if_parameter(u'Resonance Type').has_value(u'Membrane').else_use(u''),
                                     use(u'Transpose').if_parameter(u'MIDI Frequency').has_value(u'On').else_use(u'Tune'),
                                     u'Dry Wet')}),
             (u'Body', {BANK_PARAMETERS_KEY: (u'Resonance Type',
                                     use(u'Ratio').if_parameter(u'Resonance Type').has_value(u'Plate').else_use(u'Ratio').if_parameter(u'Resonance Type').has_value(u'Membrane'),
                                     u'Decay',
                                     use(u'Radius').if_parameter(u'Resonance Type').has_value(u'Tube').else_use(u'Radius').if_parameter(u'Resonance Type').has_value(u'Pipe').else_use(u'Material'),
                                     use(u'').if_parameter(u'Resonance Type').has_value(u'Tube').else_use(u'Opening').if_parameter(u'Resonance Type').has_value(u'Pipe').else_use(u'Inharmonics'),
                                     use(u'').if_parameter(u'Resonance Type').has_value(u'Tube').else_use(u'').if_parameter(u'Resonance Type').has_value(u'Pipe').else_use(u'Listening L'),
                                     use(u'').if_parameter(u'Resonance Type').has_value(u'Tube').else_use(u'').if_parameter(u'Resonance Type').has_value(u'Pipe').else_use(u'Listening R'),
                                     use(u'').if_parameter(u'Resonance Type').has_value(u'Tube').else_use(u'').if_parameter(u'Resonance Type').has_value(u'Pipe').else_use(u'Hit'))}),
             (u'LFO', {BANK_PARAMETERS_KEY: (u'LFO On/Off',
                                     use(u'LFO Shape').if_parameter(u'LFO On/Off').has_value(u'On'),
                                     use(u'LFO Amount').if_parameter(u'LFO On/Off').has_value(u'On'),
                                     use(u'LFO Sync').if_parameter(u'LFO On/Off').has_value(u'On'),
                                     use(u'').if_parameter(u'LFO On/Off').has_value(u'Off').else_use(u'LFO Rate').if_parameter(u'LFO Sync').has_value(u'Free').else_use(u'LFO Sync Rate'),
                                     use(u'').if_parameter(u'LFO On/Off').has_value(u'Off').else_use(u'LFO Stereo Mode').if_parameter(u'LFO Sync').has_value(u'Free').else_use(u'Offset'),
                                     use(u'').if_parameter(u'LFO On/Off').has_value(u'Off').else_use(u'Phase').if_parameter(u'LFO Sync').has_value(u'Sync').else_use(u'Spin').if_parameter(u'LFO Stereo Mode').has_value(u'Spin'),
                                     u'')}),
             (u'Tune & Sidechain', {BANK_PARAMETERS_KEY: (u'MIDI Frequency',
                                     u'MIDI Mode',
                                     use(u'Transpose').if_parameter(u'MIDI Frequency').has_value(u'On').else_use(u'Tune'),
                                     use(u'Fine').if_parameter(u'MIDI Frequency').has_value(u'On'),
                                     u'Spread',
                                     use(u'').if_parameter(u'Resonance Type').has_value(u'Tube').else_use(u'').if_parameter(u'Resonance Type').has_value(u'Pipe').else_use(u'Brightness'),
                                     u'Note Off',
                                     use(u'Off Decay').if_parameter(u'Note Off').has_value(u'On'))}),
             (u'Filter & Mix', {BANK_PARAMETERS_KEY: (u'Filter On/Off',
                                     use(u'Mid Freq').if_parameter(u'Filter On/Off').has_value(u'On'),
                                     use(u'Width').if_parameter(u'Filter On/Off').has_value(u'On'),
                                     use(u'').if_parameter(u'Resonance Type').has_value(u'Tube').else_use(u'').if_parameter(u'Resonance Type').has_value(u'Pipe').else_use(u'Resonator Quality'),
                                     u'Bleed',
                                     u'Gain',
                                     u'Dry Wet',
                                     u'')}))),
 u'Delay': IndexedDict(((BANK_MAIN_KEY, {BANK_PARAMETERS_KEY: (use(u'L Sync Enum').with_name(u'DlayMd L'),
                                    use(u'L 16th').with_name(u'Beat Delay').if_parameter(u'L Sync').has_value(u'On').else_use(u'L Time').with_name(u'Beat Delay'),
                                    u'L Offset',
                                    use(u'R Sync Enum').with_name(u'DlayMd R'),
                                    use(u'R 16th').with_name(u'Beat Delay').if_parameter(u'R Sync').has_value(u'On').else_use(u'R Time').with_name(u'Beat Delay'),
                                    u'R Offset',
                                    u'Feedback',
                                    u'Dry/Wet')}), (u'Time', {BANK_PARAMETERS_KEY: (use(u'Delay Mode').with_name(u'DlayMd'),
                                    u'Link',
                                    u'Ping Pong',
                                    u'L Offset',
                                    u'R Offset',
                                    u'Freeze',
                                    u'Feedback',
                                    u'Dry/Wet')}), (u'Filter/Mod', {BANK_PARAMETERS_KEY: (u'Filter On',
                                    u'Filter Freq',
                                    u'Filter Width',
                                    use(u'Mod Freq').with_name(u'Filter Mod Rate'),
                                    u'Filter < Mod',
                                    u'Dly < Mod',
                                    u'Feedback',
                                    u'Dry/Wet')}))),
 u'Tube': IndexedDict(((u'Character', {BANK_PARAMETERS_KEY: (u'Drive',
                                   u'Tube Type',
                                   u'Bias',
                                   u'Tone',
                                   u'Attack',
                                   u'Release',
                                   u'Envelope',
                                   u'Dry/Wet')}), (u'Output', {BANK_PARAMETERS_KEY: (u'',
                                   u'',
                                   u'',
                                   u'',
                                   u'',
                                   u'',
                                   u'Output',
                                   u'Dry/Wet')}))),
 u'Echo': IndexedDict(((BANK_MAIN_KEY, {BANK_PARAMETERS_KEY: (use(u'L Time').with_name(u'M Time').if_parameter(u'Channel Mode').has_value(u'Mid/Side').and_parameter(u'L Sync').has_value(u'Off').else_use(u'L Time').if_parameter(u'L Sync').has_value(u'Off').else_use(u'L 16th').with_name(u'M 16th').if_parameter(u'Channel Mode').has_value(u'Mid/Side').and_parameter(u'L Sync Mode').has_value(u'16th').else_use(u'L 16th').if_parameter(u'L Sync Mode').has_value(u'16th').else_use(u'L Division').with_name(u'M Division').if_parameter(u'Channel Mode').has_value(u'Mid/Side').else_use(u'L Division'),
                                   use(u'L Sync').with_name(u'M Sync').if_parameter(u'Channel Mode').has_value(u'Mid/Side').else_use(u'L Sync'),
                                   use(u'L Sync Mode').with_name(u'M Sync Mode').if_parameter(u'Channel Mode').has_value(u'Mid/Side').and_parameter(u'L Sync').has_value(u'On').else_use(u'L Sync Mode').if_parameter(u'L Sync').has_value(u'On'),
                                   u'HP Freq',
                                   u'LP Freq',
                                   u'Feedback',
                                   u'Input Gain',
                                   u'Dry Wet')}),
           (u'L/Mid', {BANK_PARAMETERS_KEY: (use(u'L Time').with_name(u'M Time').if_parameter(u'Channel Mode').has_value(u'Mid/Side').and_parameter(u'L Sync').has_value(u'Off').else_use(u'L Time').if_parameter(u'L Sync').has_value(u'Off').else_use(u'L 16th').with_name(u'M 16th').if_parameter(u'Channel Mode').has_value(u'Mid/Side').and_parameter(u'L Sync Mode').has_value(u'16th').else_use(u'L 16th').if_parameter(u'L Sync Mode').has_value(u'16th').else_use(u'L Division').with_name(u'M Division').if_parameter(u'Channel Mode').has_value(u'Mid/Side').else_use(u'L Division'),
                                   use(u'L Sync').with_name(u'M Sync').if_parameter(u'Channel Mode').has_value(u'Mid/Side').else_use(u'L Sync'),
                                   use(u'L Sync Mode').with_name(u'M Sync Mode').if_parameter(u'Channel Mode').has_value(u'Mid/Side').and_parameter(u'L Sync').has_value(u'On').else_use(u'L Sync Mode').if_parameter(u'L Sync').has_value(u'On'),
                                   use(u'L Offset').with_name(u'M Offset').if_parameter(u'Channel Mode').has_value(u'Mid/Side').else_use(u'L Offset'),
                                   u'Link',
                                   u'Feedback',
                                   u'Feedback Inv',
                                   u'Dry Wet')}),
           (u'R/Side', {BANK_PARAMETERS_KEY: (use(u'R Time').with_name(u'S Time').if_parameter(u'Channel Mode').has_value(u'Mid/Side').and_parameter(u'R Sync').has_value(u'Off').and_parameter(u'Link').has_value(u'Off').else_use(u'R Time').if_parameter(u'R Sync').has_value(u'Off').and_parameter(u'Link').has_value(u'Off').else_use(u'R 16th').with_name(u'S 16th').if_parameter(u'Channel Mode').has_value(u'Mid/Side').and_parameter(u'R Sync Mode').has_value(u'16th').and_parameter(u'Link').has_value(u'Off').else_use(u'R 16th').if_parameter(u'R Sync Mode').has_value(u'16th').and_parameter(u'Link').has_value(u'Off').else_use(u'R Division').with_name(u'S Division').if_parameter(u'Channel Mode').has_value(u'Mid/Side').and_parameter(u'Link').has_value(u'Off').else_use(u'R Division').if_parameter(u'Link').has_value(u'Off').else_use(u'L Time').with_name(u'M Time').if_parameter(u'Channel Mode').has_value(u'Mid/Side').and_parameter(u'L Sync').has_value(u'Off').else_use(u'L Time').if_parameter(u'L Sync').has_value(u'Off').else_use(u'L 16th').with_name(u'M 16th').if_parameter(u'Channel Mode').has_value(u'Mid/Side').and_parameter(u'L Sync Mode').has_value(u'16th').else_use(u'L 16th').if_parameter(u'L Sync Mode').has_value(u'16th').else_use(u'L Division').with_name(u'M Division').if_parameter(u'Channel Mode').has_value(u'Mid/Side').else_use(u'L Division'),
                                   use(u'R Sync').with_name(u'S Sync').if_parameter(u'Channel Mode').has_value(u'Mid/Side').and_parameter(u'Link').has_value(u'Off').else_use(u'R Sync').if_parameter(u'Link').has_value(u'Off').else_use(u'L Sync').with_name(u'M Sync').if_parameter(u'Channel Mode').has_value(u'Mid/Side').else_use(u'L Sync'),
                                   use(u'R Sync Mode').with_name(u'S Sync Mode').if_parameter(u'Channel Mode').has_value(u'Mid/Side').and_parameter(u'R Sync').has_value(u'On').and_parameter(u'Link').has_value(u'Off').else_use(u'R Sync Mode').if_parameter(u'R Sync').has_value(u'On').and_parameter(u'Link').has_value(u'Off').else_use(u'L Sync Mode').with_name(u'M Sync Mode').if_parameter(u'Channel Mode').has_value(u'Mid/Side').and_parameter(u'L Sync').has_value(u'On').else_use(u'L Sync Mode').if_parameter(u'L Sync').has_value(u'On'),
                                   use(u'R Offset').with_name(u'S Offset').if_parameter(u'Channel Mode').has_value(u'Mid/Side').else_use(u'R Offset'),
                                   u'Link',
                                   u'Feedback',
                                   u'Feedback Inv',
                                   u'Dry Wet')}),
           (u'Global', {BANK_PARAMETERS_KEY: (u'Repitch',
                                   u'Channel Mode',
                                   u'Stereo Width',
                                   u'',
                                   u'Clip Dry',
                                   u'Input Gain',
                                   u'Output Gain',
                                   u'Dry Wet')}),
           (u'Filter', {BANK_PARAMETERS_KEY: (u'Filter On',
                                   u'HP Freq',
                                   u'HP Res',
                                   u'LP Freq',
                                   u'LP Res',
                                   u'Input Gain',
                                   u'Output Gain',
                                   u'Dry Wet')}),
           (u'Modulation', {BANK_PARAMETERS_KEY: (u'Mod Wave',
                                   u'Mod Sync',
                                   use(u'Mod Rate').if_parameter(u'Mod Sync').has_value(u'On').else_use(u'Mod Freq'),
                                   u'Mod Phase',
                                   u'Env Mix',
                                   u'Dly < Mod',
                                   u'Flt < Mod',
                                   u'Mod 4x')}),
           (u'Reverb', {BANK_PARAMETERS_KEY: (u'Reverb Level',
                                   u'Reverb Loc',
                                   u'Reverb Decay',
                                   u'',
                                   u'',
                                   u'',
                                   u'',
                                   u'')}),
           (u'Gate/Ducking', {BANK_PARAMETERS_KEY: (u'Gate On',
                                   u'Gate Thr',
                                   u'Gate Release',
                                   u'',
                                   u'Duck On',
                                   u'Duck Thr',
                                   u'Duck Release',
                                   u'')}),
           (u'Noise/Wobble', {BANK_PARAMETERS_KEY: (u'Noise On',
                                   u'Noise Amt',
                                   u'Noise Mrph',
                                   u'',
                                   u'Wobble On',
                                   u'Wobble Amt',
                                   u'Wobble Mrph',
                                   u'')}))),
 u'Eq8': IndexedDict(((BANK_MAIN_KEY, {BANK_PARAMETERS_KEY: (use(u'1 Frequency A').if_parameter(u'1 Filter On A').has_value(u'On'),
                                  use(u'').if_parameter(u'1 Filter On A').has_value(u'Off').else_use(u'1 Gain A').if_parameter(u'1 Filter Type A').has_value(u'Low Shelf').else_use(u'1 Gain A').if_parameter(u'1 Filter Type A').has_value(u'Bell').else_use(u'1 Gain A').if_parameter(u'1 Filter Type A').has_value(u'High Shelf').else_use(u'1 Resonance A'),
                                  use(u'2 Frequency A').if_parameter(u'2 Filter On A').has_value(u'On'),
                                  use(u'').if_parameter(u'2 Filter On A').has_value(u'Off').else_use(u'2 Gain A').if_parameter(u'2 Filter Type A').has_value(u'Low Shelf').else_use(u'2 Gain A').if_parameter(u'2 Filter Type A').has_value(u'Bell').else_use(u'2 Gain A').if_parameter(u'2 Filter Type A').has_value(u'High Shelf').else_use(u'2 Resonance A'),
                                  use(u'3 Frequency A').if_parameter(u'3 Filter On A').has_value(u'On'),
                                  use(u'').if_parameter(u'3 Filter On A').has_value(u'Off').else_use(u'3 Gain A').if_parameter(u'3 Filter Type A').has_value(u'Low Shelf').else_use(u'3 Gain A').if_parameter(u'3 Filter Type A').has_value(u'Bell').else_use(u'3 Gain A').if_parameter(u'3 Filter Type A').has_value(u'High Shelf').else_use(u'3 Resonance A'),
                                  use(u'4 Frequency A').if_parameter(u'4 Filter On A').has_value(u'On'),
                                  use(u'').if_parameter(u'4 Filter On A').has_value(u'Off').else_use(u'4 Gain A').if_parameter(u'4 Filter Type A').has_value(u'Low Shelf').else_use(u'4 Gain A').if_parameter(u'4 Filter Type A').has_value(u'Bell').else_use(u'4 Gain A').if_parameter(u'4 Filter Type A').has_value(u'High Shelf').else_use(u'4 Resonance A'))}),
          (u'EQ Band 1', {BANK_PARAMETERS_KEY: (u'1 Filter On A',
                                  use(u'1 Filter Type A').if_parameter(u'1 Filter On A').has_value(u'On'),
                                  use(u'1 Frequency A').if_parameter(u'1 Filter On A').has_value(u'On'),
                                  use(u'1 Gain A').if_parameter(u'1 Filter On A').has_value(u'On'),
                                  use(u'1 Resonance A').if_parameter(u'1 Filter On A').has_value(u'On'),
                                  u'Adaptive Q',
                                  u'Scale',
                                  u'Output Gain')}),
          (u'EQ Band 2', {BANK_PARAMETERS_KEY: (u'2 Filter On A',
                                  use(u'2 Filter Type A').if_parameter(u'2 Filter On A').has_value(u'On'),
                                  use(u'2 Frequency A').if_parameter(u'2 Filter On A').has_value(u'On'),
                                  use(u'2 Gain A').if_parameter(u'2 Filter On A').has_value(u'On'),
                                  use(u'2 Resonance A').if_parameter(u'2 Filter On A').has_value(u'On'),
                                  u'Adaptive Q',
                                  u'Scale',
                                  u'Output Gain')}),
          (u'EQ Band 3', {BANK_PARAMETERS_KEY: (u'3 Filter On A',
                                  use(u'3 Filter Type A').if_parameter(u'3 Filter On A').has_value(u'On'),
                                  use(u'3 Frequency A').if_parameter(u'3 Filter On A').has_value(u'On'),
                                  use(u'3 Gain A').if_parameter(u'3 Filter On A').has_value(u'On'),
                                  use(u'3 Resonance A').if_parameter(u'3 Filter On A').has_value(u'On'),
                                  u'Adaptive Q',
                                  u'Scale',
                                  u'Output Gain')}),
          (u'EQ Band 4', {BANK_PARAMETERS_KEY: (u'4 Filter On A',
                                  use(u'4 Filter Type A').if_parameter(u'4 Filter On A').has_value(u'On'),
                                  use(u'4 Frequency A').if_parameter(u'4 Filter On A').has_value(u'On'),
                                  use(u'4 Gain A').if_parameter(u'4 Filter On A').has_value(u'On'),
                                  use(u'4 Resonance A').if_parameter(u'4 Filter On A').has_value(u'On'),
                                  u'Adaptive Q',
                                  u'Scale',
                                  u'Output Gain')}),
          (u'EQ Band 5', {BANK_PARAMETERS_KEY: (u'5 Filter On A',
                                  use(u'5 Filter Type A').if_parameter(u'5 Filter On A').has_value(u'On'),
                                  use(u'5 Frequency A').if_parameter(u'5 Filter On A').has_value(u'On'),
                                  use(u'5 Gain A').if_parameter(u'5 Filter On A').has_value(u'On'),
                                  use(u'5 Resonance A').if_parameter(u'5 Filter On A').has_value(u'On'),
                                  u'Adaptive Q',
                                  u'Scale',
                                  u'Output Gain')}),
          (u'EQ Band 6', {BANK_PARAMETERS_KEY: (u'6 Filter On A',
                                  use(u'6 Filter Type A').if_parameter(u'6 Filter On A').has_value(u'On'),
                                  use(u'6 Frequency A').if_parameter(u'6 Filter On A').has_value(u'On'),
                                  use(u'6 Gain A').if_parameter(u'6 Filter On A').has_value(u'On'),
                                  use(u'6 Resonance A').if_parameter(u'6 Filter On A').has_value(u'On'),
                                  u'Adaptive Q',
                                  u'Scale',
                                  u'Output Gain')}),
          (u'EQ Band 7', {BANK_PARAMETERS_KEY: (u'7 Filter On A',
                                  use(u'7 Filter Type A').if_parameter(u'7 Filter On A').has_value(u'On'),
                                  use(u'7 Frequency A').if_parameter(u'7 Filter On A').has_value(u'On'),
                                  use(u'7 Gain A').if_parameter(u'7 Filter On A').has_value(u'On'),
                                  use(u'7 Resonance A').if_parameter(u'7 Filter On A').has_value(u'On'),
                                  u'Adaptive Q',
                                  u'Scale',
                                  u'Output Gain')}),
          (u'EQ Band 8', {BANK_PARAMETERS_KEY: (u'8 Filter On A',
                                  use(u'8 Filter Type A').if_parameter(u'8 Filter On A').has_value(u'On'),
                                  use(u'8 Frequency A').if_parameter(u'8 Filter On A').has_value(u'On'),
                                  use(u'8 Gain A').if_parameter(u'8 Filter On A').has_value(u'On'),
                                  use(u'8 Resonance A').if_parameter(u'8 Filter On A').has_value(u'On'),
                                  u'Adaptive Q',
                                  u'Scale',
                                  u'Output Gain')}),
          (u'8 x Frequency', {BANK_PARAMETERS_KEY: (use(u'1 Frequency A').if_parameter(u'1 Filter On A').has_value(u'On'),
                                  use(u'2 Frequency A').if_parameter(u'2 Filter On A').has_value(u'On'),
                                  use(u'3 Frequency A').if_parameter(u'3 Filter On A').has_value(u'On'),
                                  use(u'4 Frequency A').if_parameter(u'4 Filter On A').has_value(u'On'),
                                  use(u'5 Frequency A').if_parameter(u'5 Filter On A').has_value(u'On'),
                                  use(u'6 Frequency A').if_parameter(u'6 Filter On A').has_value(u'On'),
                                  use(u'7 Frequency A').if_parameter(u'7 Filter On A').has_value(u'On'),
                                  use(u'8 Frequency A').if_parameter(u'8 Filter On A').has_value(u'On'))}),
          (u'8 x Gain', {BANK_PARAMETERS_KEY: (use(u'').if_parameter(u'1 Filter On A').has_value(u'Off').else_use(u'1 Gain A').if_parameter(u'1 Filter Type A').has_value(u'Low Shelf').else_use(u'1 Gain A').if_parameter(u'1 Filter Type A').has_value(u'Bell').else_use(u'1 Gain A').if_parameter(u'1 Filter Type A').has_value(u'High Shelf').else_use(u''),
                                  use(u'').if_parameter(u'2 Filter On A').has_value(u'Off').else_use(u'2 Gain A').if_parameter(u'2 Filter Type A').has_value(u'Low Shelf').else_use(u'2 Gain A').if_parameter(u'2 Filter Type A').has_value(u'Bell').else_use(u'2 Gain A').if_parameter(u'2 Filter Type A').has_value(u'High Shelf').else_use(u''),
                                  use(u'').if_parameter(u'3 Filter On A').has_value(u'Off').else_use(u'3 Gain A').if_parameter(u'3 Filter Type A').has_value(u'Low Shelf').else_use(u'3 Gain A').if_parameter(u'3 Filter Type A').has_value(u'Bell').else_use(u'3 Gain A').if_parameter(u'3 Filter Type A').has_value(u'High Shelf').else_use(u''),
                                  use(u'').if_parameter(u'4 Filter On A').has_value(u'Off').else_use(u'4 Gain A').if_parameter(u'4 Filter Type A').has_value(u'Low Shelf').else_use(u'4 Gain A').if_parameter(u'4 Filter Type A').has_value(u'Bell').else_use(u'4 Gain A').if_parameter(u'4 Filter Type A').has_value(u'High Shelf').else_use(u''),
                                  use(u'').if_parameter(u'5 Filter On A').has_value(u'Off').else_use(u'5 Gain A').if_parameter(u'5 Filter Type A').has_value(u'Low Shelf').else_use(u'5 Gain A').if_parameter(u'5 Filter Type A').has_value(u'Bell').else_use(u'5 Gain A').if_parameter(u'5 Filter Type A').has_value(u'High Shelf').else_use(u''),
                                  use(u'').if_parameter(u'6 Filter On A').has_value(u'Off').else_use(u'6 Gain A').if_parameter(u'6 Filter Type A').has_value(u'Low Shelf').else_use(u'6 Gain A').if_parameter(u'6 Filter Type A').has_value(u'Bell').else_use(u'6 Gain A').if_parameter(u'6 Filter Type A').has_value(u'High Shelf').else_use(u''),
                                  use(u'').if_parameter(u'7 Filter On A').has_value(u'Off').else_use(u'7 Gain A').if_parameter(u'7 Filter Type A').has_value(u'Low Shelf').else_use(u'7 Gain A').if_parameter(u'7 Filter Type A').has_value(u'Bell').else_use(u'7 Gain A').if_parameter(u'7 Filter Type A').has_value(u'High Shelf').else_use(u''),
                                  use(u'').if_parameter(u'8 Filter On A').has_value(u'Off').else_use(u'8 Gain A').if_parameter(u'8 Filter Type A').has_value(u'Low Shelf').else_use(u'8 Gain A').if_parameter(u'8 Filter Type A').has_value(u'Bell').else_use(u'8 Gain A').if_parameter(u'8 Filter Type A').has_value(u'High Shelf').else_use(u''))}),
          (u'8 x Resonance', {BANK_PARAMETERS_KEY: (u'1 Resonance A',
                                  u'2 Resonance A',
                                  u'3 Resonance A',
                                  u'4 Resonance A',
                                  u'5 Resonance A',
                                  u'6 Resonance A',
                                  u'7 Resonance A',
                                  u'8 Resonance A')}))),
 u'FilterEQ3': IndexedDict(((u'EQ', {BANK_PARAMETERS_KEY: (u'LowOn',
                                        u'MidOn',
                                        u'HighOn',
                                        use(u'GainLo').if_parameter(u'LowOn').has_value(u'On'),
                                        use(u'GainMid').if_parameter(u'MidOn').has_value(u'On'),
                                        use(u'GainHi').if_parameter(u'HighOn').has_value(u'On'),
                                        u'FreqLo',
                                        u'FreqHi')}), (u'Slope', {BANK_PARAMETERS_KEY: (u'Slope',
                                        u'',
                                        u'',
                                        u'',
                                        u'',
                                        u'',
                                        u'',
                                        u'')}))),
 u'Erosion': IndexedDict(((BANK_MAIN_KEY, {BANK_PARAMETERS_KEY: (u'Mode',
                                      u'Frequency',
                                      use(u'').if_parameter(u'Mode').has_value(u'Sine').else_use(u'Width'),
                                      u'Amount',
                                      u'',
                                      u'',
                                      u'',
                                      u'')}),)),
 u'ProxyAudioEffectDevice': IndexedDict(((BANK_MAIN_KEY, {BANK_PARAMETERS_KEY: (u'Input Gain',
                                                     u'Output Gain',
                                                     u'Dry/Wet',
                                                     u'',
                                                     u'',
                                                     u'',
                                                     u'',
                                                     u'')}),)),
 u'FilterDelay': IndexedDict(((BANK_MAIN_KEY, {BANK_PARAMETERS_KEY: (use(u'2 Filter Freq').if_parameter(u'2 Input On').has_value(u'On'),
                                          use(u'2 Filter Width').if_parameter(u'2 Input On').has_value(u'On'),
                                          use(u'2 Delay Mode').if_parameter(u'2 Input On').has_value(u'On'),
                                          use(u'').if_parameter(u'2 Input On').has_value(u'Off').else_use(u'2 Time Delay').if_parameter(u'2 Delay Mode').has_value(u'Off').else_use(u'2 Beat Delay'),
                                          use(u'2 Feedback').if_parameter(u'2 Input On').has_value(u'On'),
                                          use(u'1 Volume').if_parameter(u'1 Input On').has_value(u'On').else_use(u'2 Pan'),
                                          use(u'2 Volume').if_parameter(u'2 Input On').has_value(u'On'),
                                          use(u'3 Volume').if_parameter(u'3 Input On').has_value(u'On').else_use(u'Dry'))}),
                  (u'L Filter', {BANK_PARAMETERS_KEY: (u'1 Input On',
                                          use(u'1 Filter Freq').if_parameter(u'1 Input On').has_value(u'On'),
                                          use(u'1 Filter Width').if_parameter(u'1 Input On').has_value(u'On'),
                                          use(u'1 Feedback').if_parameter(u'1 Input On').has_value(u'On'),
                                          use(u'1 Delay Mode').if_parameter(u'1 Input On').has_value(u'On'),
                                          use(u'').if_parameter(u'1 Input On').has_value(u'Off').else_use(u'1 Time Delay').if_parameter(u'1 Delay Mode').has_value(u'Off').else_use(u'1 Beat Delay'),
                                          use(u'').if_parameter(u'1 Input On').has_value(u'Off').else_use(u'1 Beat Swing').if_parameter(u'1 Delay Mode').has_value(u'On').else_use(u''),
                                          use(u'1 Volume').if_parameter(u'1 Input On').has_value(u'Off'))}),
                  (u'L+R Filter', {BANK_PARAMETERS_KEY: (u'2 Input On',
                                          use(u'2 Filter Freq').if_parameter(u'2 Input On').has_value(u'On'),
                                          use(u'2 Filter Width').if_parameter(u'2 Input On').has_value(u'On'),
                                          use(u'2 Feedback').if_parameter(u'2 Input On').has_value(u'On'),
                                          use(u'2 Delay Mode').if_parameter(u'2 Input On').has_value(u'On'),
                                          use(u'').if_parameter(u'2 Input On').has_value(u'Off').else_use(u'2 Time Delay').if_parameter(u'2 Delay Mode').has_value(u'Off').else_use(u'2 Beat Delay'),
                                          use(u'').if_parameter(u'2 Input On').has_value(u'Off').else_use(u'2 Beat Swing').if_parameter(u'2 Delay Mode').has_value(u'On').else_use(u''),
                                          use(u'2 Volume').if_parameter(u'2 Input On').has_value(u'On'))}),
                  (u'R Filter', {BANK_PARAMETERS_KEY: (u'3 Input On',
                                          use(u'3 Filter Freq').if_parameter(u'3 Input On').has_value(u'On'),
                                          use(u'3 Filter Width').if_parameter(u'3 Input On').has_value(u'On'),
                                          use(u'3 Feedback').if_parameter(u'3 Input On').has_value(u'On'),
                                          use(u'3 Delay Mode').if_parameter(u'3 Input On').has_value(u'On'),
                                          use(u'').if_parameter(u'3 Input On').has_value(u'Off').else_use(u'3 Time Delay').if_parameter(u'3 Delay Mode').has_value(u'Off').else_use(u'3 Beat Delay'),
                                          use(u'').if_parameter(u'3 Input On').has_value(u'Off').else_use(u'3 Beat Swing').if_parameter(u'3 Delay Mode').has_value(u'On').else_use(u''),
                                          use(u'3 Volume').if_parameter(u'3 Input On').has_value(u'On'))}),
                  (u'Mix', {BANK_PARAMETERS_KEY: (use(u'1 Pan').if_parameter(u'1 Input On').has_value(u'On'),
                                          use(u'2 Pan').if_parameter(u'2 Input On').has_value(u'On'),
                                          use(u'3 Pan').if_parameter(u'3 Input On').has_value(u'On'),
                                          u'',
                                          use(u'1 Volume').if_parameter(u'1 Input On').has_value(u'On'),
                                          use(u'2 Volume').if_parameter(u'2 Input On').has_value(u'On'),
                                          use(u'3 Volume').if_parameter(u'3 Input On').has_value(u'On'),
                                          u'Dry')}))),
 u'Flanger': IndexedDict(((BANK_MAIN_KEY, {BANK_PARAMETERS_KEY: (u'LFO Amount',
                                      u'Sync',
                                      use(u'Frequency').if_parameter(u'Sync').has_value(u'Free').else_use(u'Sync Rate'),
                                      u'Delay Time',
                                      u'Hi Pass',
                                      u'Env. Modulation',
                                      u'Feedback',
                                      u'Dry/Wet')}), (u'Envelope', {BANK_PARAMETERS_KEY: (u'Env. Attack',
                                      u'Env. Release',
                                      u'Env. Modulation',
                                      u'Hi Pass',
                                      u'Delay Time',
                                      u'Feedback',
                                      u'Polarity',
                                      u'Dry/Wet')}), (u'LFO / S&H', {BANK_PARAMETERS_KEY: (u'LFO Amount',
                                      u'LFO Waveform',
                                      u'Sync',
                                      use(u'Frequency').if_parameter(u'Sync').has_value(u'Free').else_use(u'Sync Rate'),
                                      use(u'').if_parameter(u'LFO Waveform').has_value(u'S&H Width').else_use(u'LFO Stereo Mode').if_parameter(u'Sync').has_value(u'Free').else_use(u'LFO Offset'),
                                      use(u'LFO Width (Random)').if_parameter(u'LFO Waveform').has_value(u'S&H Width').else_use(u'LFO Phase').if_parameter(u'Sync').has_value(u'Sync').else_use(u'LFO Phase').if_parameter(u'LFO Stereo Mode').has_value(u'Phase').else_use(u'LFO Spin'),
                                      u'',
                                      u'')}))),
 u'FrequencyShifter': IndexedDict(((u'FreqDrive', {BANK_PARAMETERS_KEY: (u'Mode',
                                               use(u'Ring Mod Frequency').if_parameter(u'Mode').has_value(u'Ring Modulation').else_use(u'Coarse'),
                                               u'Wide',
                                               u'Fine',
                                               use(u'Drive On/Off').if_parameter(u'Mode').has_value(u'Ring Modulation'),
                                               use(u'Drive').if_parameter(u'Drive On/Off').has_value(u'On').and_parameter(u'Mode').has_value(u'Ring Modulation'),
                                               u'LFO Amount',
                                               u'Dry/Wet')}), (u'LFO / S&H', {BANK_PARAMETERS_KEY: (u'LFO Amount',
                                               u'LFO Waveform',
                                               u'Sync',
                                               use(u'LFO Frequency').if_parameter(u'Sync').has_value(u'Free').else_use(u'Sync Rate'),
                                               use(u'').if_parameter(u'LFO Waveform').has_value(u'S&H Width').else_use(u'LFO Stereo Mode').if_parameter(u'Sync').has_value(u'Free').else_use(u'LFO Offset'),
                                               use(u'LFO Width (Random)').if_parameter(u'LFO Waveform').has_value(u'S&H Width').else_use(u'LFO Phase').if_parameter(u'Sync').has_value(u'Sync').else_use(u'LFO Phase').if_parameter(u'LFO Stereo Mode').has_value(u'Phase').else_use(u'LFO Spin'),
                                               u'',
                                               u'')}))),
 u'Gate': IndexedDict(((u'Gate', {BANK_PARAMETERS_KEY: (u'Threshold',
                                   u'Return',
                                   u'FlipMode',
                                   u'LookAhead',
                                   u'Attack',
                                   u'Hold',
                                   u'Release',
                                   u'Floor')}), (u'Sidechain', {BANK_PARAMETERS_KEY: (u'S/C On',
                                   use(u'S/C Gain').if_parameter(u'S/C On').has_value(u'On'),
                                   use(u'S/C Mix').if_parameter(u'S/C On').has_value(u'On'),
                                   u'S/C Listen',
                                   u'S/C EQ On',
                                   use(u'S/C EQ Type').if_parameter(u'S/C EQ On').has_value(u'On'),
                                   use(u'S/C EQ Freq').if_parameter(u'S/C EQ On').has_value(u'On'),
                                   use(u'').if_parameter(u'S/C EQ On').has_value(u'Off').else_use(u'S/C EQ Gain').if_parameter(u'S/C EQ Type').has_value(u'Low Shelf').else_use(u'S/C EQ Gain').if_parameter(u'S/C EQ Type').has_value(u'High Shelf').else_use(u'S/C EQ Gain').if_parameter(u'S/C EQ Type').has_value(u'Bell').else_use(u'S/C EQ Q'))}))),
 u'GlueCompressor': IndexedDict(((u'Compression', {BANK_PARAMETERS_KEY: (u'Threshold',
                                             u'Ratio',
                                             u'Attack',
                                             u'Release',
                                             u'Peak Clip In',
                                             u'Range',
                                             u'Makeup',
                                             u'Dry/Wet')}), (u'Sidechain', {BANK_PARAMETERS_KEY: (u'S/C On',
                                             use(u'S/C Gain').if_parameter(u'S/C On').has_value(u'On'),
                                             use(u'S/C Mix').if_parameter(u'S/C On').has_value(u'On'),
                                             u'',
                                             u'S/C EQ On',
                                             use(u'S/C EQ Type').if_parameter(u'S/C EQ On').has_value(u'On'),
                                             use(u'S/C EQ Freq').if_parameter(u'S/C EQ On').has_value(u'On'),
                                             use(u'').if_parameter(u'S/C EQ On').has_value(u'Off').else_use(u'S/C EQ Gain').if_parameter(u'S/C EQ Type').has_value(u'Low Shelf').else_use(u'S/C EQ Gain').if_parameter(u'S/C EQ Type').has_value(u'High Shelf').else_use(u'S/C EQ Gain').if_parameter(u'S/C EQ Type').has_value(u'Bell').else_use(u'S/C EQ Q'))}))),
 u'GrainDelay': IndexedDict(((u'Pitch', {BANK_PARAMETERS_KEY: (u'Frequency',
                                         u'Pitch',
                                         u'Delay Mode',
                                         use(u'Time Delay').if_parameter(u'Delay Mode').has_value(u'Off').else_use(u'Beat Delay'),
                                         u'Random',
                                         u'Spray',
                                         u'Feedback',
                                         u'DryWet')}), (u'Time', {BANK_PARAMETERS_KEY: (u'Delay Mode',
                                         use(u'Time Delay').if_parameter(u'Delay Mode').has_value(u'Off').else_use(u'Beat Delay'),
                                         u'Beat Swing',
                                         u'Feedback',
                                         u'',
                                         u'',
                                         u'',
                                         u'DryWet')}))),
 u'Limiter': IndexedDict(((BANK_MAIN_KEY, {BANK_PARAMETERS_KEY: (u'Gain',
                                      u'Ceiling',
                                      u'Link Channels',
                                      u'Lookahead',
                                      u'Auto',
                                      use(u'Release time').if_parameter(u'Auto').has_value(u'Off'),
                                      u'',
                                      u'')}),)),
 u'Looper': IndexedDict(((BANK_MAIN_KEY, {BANK_PARAMETERS_KEY: (u'State',
                                     u'Speed',
                                     u'Reverse',
                                     u'Quantization',
                                     u'Monitor',
                                     u'Song Control',
                                     u'Tempo Control',
                                     u'Feedback')}),)),
 u'MultibandDynamics': IndexedDict(((BANK_MAIN_KEY, {BANK_PARAMETERS_KEY: (use(u'Above Threshold (Low)').if_parameter(u'Band Activator (Low)').has_value(u'On'),
                                                use(u'Above Ratio (Low)').if_parameter(u'Band Activator (Low)').has_value(u'On'),
                                                use(u'Above Threshold (Mid)').if_parameter(u'Band Activator (Mid)').has_value(u'On'),
                                                use(u'Above Ratio (Mid)').if_parameter(u'Band Activator (Mid)').has_value(u'On'),
                                                use(u'Above Threshold (High)').if_parameter(u'Band Activator (High)').has_value(u'On'),
                                                use(u'Above Ratio (High)').if_parameter(u'Band Activator (High)').has_value(u'On'),
                                                u'Master Output',
                                                u'Amount')}),
                        (u'Low Band', {BANK_PARAMETERS_KEY: (u'Band Activator (Low)',
                                                use(u'Input Gain (Low)').if_parameter(u'Band Activator (Low)').has_value(u'On'),
                                                use(u'Below Threshold (Low)').if_parameter(u'Band Activator (Low)').has_value(u'On'),
                                                use(u'Below Ratio (Low)').if_parameter(u'Band Activator (Low)').has_value(u'On'),
                                                use(u'Above Threshold (Low)').if_parameter(u'Band Activator (Low)').has_value(u'On'),
                                                use(u'Above Ratio (Low)').if_parameter(u'Band Activator (Low)').has_value(u'On'),
                                                use(u'Attack Time (Low)').if_parameter(u'Band Activator (Low)').has_value(u'On'),
                                                use(u'Release Time (Low)').if_parameter(u'Band Activator (Low)').has_value(u'On'))}),
                        (u'Mid Band', {BANK_PARAMETERS_KEY: (u'Band Activator (Mid)',
                                                use(u'Input Gain (Mid)').if_parameter(u'Band Activator (Mid)').has_value(u'On'),
                                                use(u'Below Threshold (Mid)').if_parameter(u'Band Activator (Mid)').has_value(u'On'),
                                                use(u'Below Ratio (Mid)').if_parameter(u'Band Activator (Mid)').has_value(u'On'),
                                                use(u'Above Threshold (Mid)').if_parameter(u'Band Activator (Mid)').has_value(u'On'),
                                                use(u'Above Ratio (Mid)').if_parameter(u'Band Activator (Mid)').has_value(u'On'),
                                                use(u'Attack Time (Mid)').if_parameter(u'Band Activator (Mid)').has_value(u'On'),
                                                use(u'Release Time (Mid)').if_parameter(u'Band Activator (Mid)').has_value(u'On'))}),
                        (u'High Band', {BANK_PARAMETERS_KEY: (u'Band Activator (High)',
                                                use(u'Input Gain (High)').if_parameter(u'Band Activator (High)').has_value(u'On'),
                                                use(u'Below Threshold (High)').if_parameter(u'Band Activator (High)').has_value(u'On'),
                                                use(u'Below Ratio (High)').if_parameter(u'Band Activator (High)').has_value(u'On'),
                                                use(u'Above Threshold (High)').if_parameter(u'Band Activator (High)').has_value(u'On'),
                                                use(u'Above Ratio (High)').if_parameter(u'Band Activator (High)').has_value(u'On'),
                                                use(u'Attack Time (High)').if_parameter(u'Band Activator (High)').has_value(u'On'),
                                                use(u'Release Time (High)').if_parameter(u'Band Activator (High)').has_value(u'On'))}),
                        (u'Mix & Split', {BANK_PARAMETERS_KEY: (use(u'Output Gain (Low)').if_parameter(u'Band Activator (Low)').has_value(u'On'),
                                                u'Low-Mid Crossover',
                                                use(u'Output Gain (Mid)').if_parameter(u'Band Activator (Mid)').has_value(u'On'),
                                                u'Mid-High Crossover',
                                                use(u'Output Gain (High)').if_parameter(u'Band Activator (High)').has_value(u'On'),
                                                u'Peak/RMS Mode',
                                                u'Amount',
                                                u'Master Output')}),
                        (u'Sidechain', {BANK_PARAMETERS_KEY: (u'S/C On',
                                                use(u'S/C Mix').if_parameter(u'S/C On').has_value(u'On'),
                                                use(u'S/C Gain').if_parameter(u'S/C On').has_value(u'On'),
                                                u'',
                                                u'Time Scaling',
                                                u'Soft Knee On/Off',
                                                u'',
                                                u'')}))),
 u'Overdrive': IndexedDict(((BANK_MAIN_KEY, {BANK_PARAMETERS_KEY: (u'Filter Freq',
                                        u'Filter Width',
                                        u'Drive',
                                        u'Tone',
                                        u'Preserve Dynamics',
                                        u'',
                                        u'',
                                        u'Dry/Wet')}),)),
 u'Pedal': IndexedDict(((u'Global', {BANK_PARAMETERS_KEY: (u'Type',
                                    u'Gain',
                                    u'Output',
                                    u'Bass',
                                    u'Mid',
                                    u'Treble',
                                    u'Sub',
                                    u'Dry/Wet')}), (u'EQ', {BANK_PARAMETERS_KEY: (u'',
                                    u'',
                                    u'',
                                    u'Bass',
                                    u'Mid',
                                    u'Treble',
                                    u'',
                                    u'Mid Freq')}))),
 u'Phaser': IndexedDict(((BANK_MAIN_KEY, {BANK_PARAMETERS_KEY: (u'Poles',
                                     u'Frequency',
                                     u'Feedback',
                                     u'Env. Modulation',
                                     u'LFO Amount',
                                     u'LFO Sync',
                                     use(u'LFO Frequency').if_parameter(u'LFO Sync').has_value(u'Free').else_use(u'LFO Sync Rate'),
                                     u'Dry/Wet')}), (u'Envelope', {BANK_PARAMETERS_KEY: (u'Poles',
                                     u'Type',
                                     use(u'').if_parameter(u'Type').has_value(u'Space').else_use(u'Color'),
                                     u'Frequency',
                                     u'Feedback',
                                     u'Env. Modulation',
                                     u'Env. Attack',
                                     u'Env. Release')}), (u'LFO', {BANK_PARAMETERS_KEY: (u'LFO Amount',
                                     u'LFO Waveform',
                                     u'LFO Sync',
                                     use(u'LFO Frequency').if_parameter(u'LFO Sync').has_value(u'Free').else_use(u'LFO Sync Rate'),
                                     use(u'').if_parameter(u'LFO Waveform').has_value(u'S&H Width').else_use(u'LFO Stereo Mode').if_parameter(u'LFO Sync').has_value(u'Free').else_use(u'LFO Offset'),
                                     use(u'LFO Width (Random)').if_parameter(u'LFO Waveform').has_value(u'S&H Width').else_use(u'LFO Phase').if_parameter(u'LFO Sync').has_value(u'Sync').else_use(u'LFO Phase').if_parameter(u'LFO Stereo Mode').has_value(u'Phase').else_use(u'LFO Spin'),
                                     u'',
                                     u'')}))),
 u'Redux': IndexedDict(((BANK_MAIN_KEY, {BANK_PARAMETERS_KEY: (u'Bit On',
                                    use(u'Bit Depth').if_parameter(u'Bit On').has_value(u'On'),
                                    u'Sample Mode',
                                    use(u'Sample Hard').if_parameter(u'Sample Mode').has_value(u'Hard').else_use(u'Sample Soft'),
                                    u'',
                                    u'',
                                    u'',
                                    u'')}),)),
 u'Resonator': IndexedDict(((BANK_MAIN_KEY, {BANK_PARAMETERS_KEY: (use(u'Frequency').if_parameter(u'Filter On').has_value(u'On'),
                                        u'Decay',
                                        u'Color',
                                        use(u'I Gain').if_parameter(u'I On').has_value(u'On'),
                                        use(u'II Gain').if_parameter(u'II On').has_value(u'On'),
                                        use(u'III Gain').if_parameter(u'III On').has_value(u'On'),
                                        u'Width',
                                        u'Dry/Wet')}),
                (u'Global', {BANK_PARAMETERS_KEY: (u'Mode',
                                        u'Decay',
                                        u'Const',
                                        u'Color',
                                        u'',
                                        u'Width',
                                        u'Global Gain',
                                        u'Dry/Wet')}),
                (u'Filter', {BANK_PARAMETERS_KEY: (u'Filter On',
                                        use(u'Frequency').if_parameter(u'Filter On').has_value(u'On'),
                                        use(u'Filter Type').if_parameter(u'Filter On').has_value(u'On'),
                                        u'',
                                        u'',
                                        u'',
                                        u'',
                                        u'')}),
                (u'Mode I & II', {BANK_PARAMETERS_KEY: (u'I On',
                                        use(u'I Note').if_parameter(u'I On').has_value(u'On'),
                                        use(u'I Tune').if_parameter(u'I On').has_value(u'On'),
                                        use(u'I Gain').if_parameter(u'I On').has_value(u'On'),
                                        u'II On',
                                        use(u'II Pitch').if_parameter(u'II On').has_value(u'On'),
                                        use(u'II Tune').if_parameter(u'II On').has_value(u'On'),
                                        use(u'II Gain').if_parameter(u'II On').has_value(u'On'))}),
                (u'Mode III & IV', {BANK_PARAMETERS_KEY: (u'III On',
                                        use(u'III Pitch').if_parameter(u'III On').has_value(u'On'),
                                        use(u'III Tune').if_parameter(u'III On').has_value(u'On'),
                                        use(u'III Gain').if_parameter(u'III On').has_value(u'On'),
                                        u'IV On',
                                        use(u'IV Pitch').if_parameter(u'IV On').has_value(u'On'),
                                        use(u'IV Tune').if_parameter(u'IV On').has_value(u'On'),
                                        use(u'IV Gain').if_parameter(u'IV On').has_value(u'On'))}),
                (u'Mode V', {BANK_PARAMETERS_KEY: (u'V On',
                                        use(u'V Pitch').if_parameter(u'V On').has_value(u'On'),
                                        use(u'V Tune').if_parameter(u'V On').has_value(u'On'),
                                        use(u'V Gain').if_parameter(u'V On').has_value(u'On'),
                                        u'',
                                        u'',
                                        u'',
                                        u'')}),
                (u'Mix', {BANK_PARAMETERS_KEY: (use(u'I Gain').if_parameter(u'I On').has_value(u'On'),
                                        use(u'II Gain').if_parameter(u'II On').has_value(u'On'),
                                        use(u'III Gain').if_parameter(u'III On').has_value(u'On'),
                                        use(u'IV Gain').if_parameter(u'IV On').has_value(u'On'),
                                        use(u'V Gain').if_parameter(u'V On').has_value(u'On'),
                                        u'',
                                        u'',
                                        u'')}),
                (u'Pitch', {BANK_PARAMETERS_KEY: (use(u'I Note').if_parameter(u'I On').has_value(u'On'),
                                        use(u'II Pitch').if_parameter(u'II On').has_value(u'On'),
                                        use(u'III Pitch').if_parameter(u'III On').has_value(u'On'),
                                        use(u'IV Pitch').if_parameter(u'IV On').has_value(u'On'),
                                        use(u'V Pitch').if_parameter(u'V On').has_value(u'On'),
                                        u'',
                                        u'',
                                        u'')}))),
 u'Reverb': IndexedDict(((BANK_MAIN_KEY, {BANK_PARAMETERS_KEY: (u'PreDelay',
                                     use(u'In Filter Freq').if_parameter(u'In LowCut On').has_value(u'On').else_use(u'ER Shape').if_parameter(u'In HighCut On').has_value(u'Off').else_use(u'In Filter Freq'),
                                     use(u'Chorus Amount').if_parameter(u'Chorus On').has_value(u'On').else_use(u'ER Level'),
                                     u'Stereo Image',
                                     u'Room Size',
                                     u'DecayTime',
                                     use(u'HiShelf Gain').if_parameter(u'HiShelf On').has_value(u'On').else_use(u'Diffuse Level'),
                                     u'Dry/Wet')}),
             (u'Global', {BANK_PARAMETERS_KEY: (u'Chorus On',
                                     use(u'Chorus Rate').if_parameter(u'Chorus On').has_value(u'On'),
                                     use(u'Chorus Amount').if_parameter(u'Chorus On').has_value(u'On'),
                                     u'Quality',
                                     u'Freeze On',
                                     u'Flat On',
                                     u'ER Level',
                                     u'Diffuse Level')}),
             (u'Diffusion Network', {BANK_PARAMETERS_KEY: (u'HiShelf On',
                                     use(u'HiShelf Freq').if_parameter(u'HiShelf On').has_value(u'On'),
                                     use(u'HiShelf Gain').if_parameter(u'HiShelf On').has_value(u'On'),
                                     u'LowShelf On',
                                     use(u'LowShelf Freq').if_parameter(u'LowShelf On').has_value(u'On'),
                                     use(u'LowShelf Gain').if_parameter(u'LowShelf On').has_value(u'On'),
                                     u'Density',
                                     u'Scale')}),
             (u'Input/Reflections', {BANK_PARAMETERS_KEY: (u'In LowCut On',
                                     u'In HighCut On',
                                     use(u'In Filter Freq').if_parameter(u'In LowCut On').has_value(u'On').else_use(u'').if_parameter(u'In HighCut On').has_value(u'Off').else_use(u'In Filter Freq'),
                                     use(u'In Filter Width').if_parameter(u'In LowCut On').has_value(u'On').else_use(u'').if_parameter(u'In HighCut On').has_value(u'Off').else_use(u'In Filter Width'),
                                     u'ER Spin On',
                                     use(u'ER Spin Rate').if_parameter(u'ER Spin On').has_value(u'On'),
                                     use(u'ER Spin Amount').if_parameter(u'ER Spin On').has_value(u'On'),
                                     u'ER Shape')}))),
 u'Saturator': IndexedDict(((BANK_MAIN_KEY, {BANK_PARAMETERS_KEY: (u'Drive',
                                        u'Type',
                                        u'Color',
                                        use(u'Base').if_parameter(u'Color').has_value(u'On'),
                                        use(u'Frequency').if_parameter(u'Color').has_value(u'On'),
                                        use(u'Width').if_parameter(u'Color').has_value(u'On'),
                                        use(u'Depth').if_parameter(u'Color').has_value(u'On'),
                                        u'Output')}), (u'Waveshaper', {BANK_PARAMETERS_KEY: (u'Type',
                                        use(u'WS Drive').if_parameter(u'Type').has_value(u'Waveshaper'),
                                        use(u'WS Curve').if_parameter(u'Type').has_value(u'Waveshaper'),
                                        use(u'WS Depth').if_parameter(u'Type').has_value(u'Waveshaper'),
                                        use(u'WS Lin').if_parameter(u'Type').has_value(u'Waveshaper'),
                                        use(u'WS Damp').if_parameter(u'Type').has_value(u'Waveshaper'),
                                        use(u'WS Period').if_parameter(u'Type').has_value(u'Waveshaper'),
                                        u'Dry/Wet')}), (u'Output', {BANK_PARAMETERS_KEY: (u'',
                                        u'',
                                        u'',
                                        u'',
                                        u'',
                                        u'Soft Clip',
                                        u'Output',
                                        u'Dry/Wet')}))),
 u'StereoGain': IndexedDict(((u'Utility', {BANK_PARAMETERS_KEY: (use(u'').if_parameter(u'Channel Mode').has_value(u'Right').else_use(u'Left Inv').if_parameter(u'Mute').has_value(u'Off'),
                                         use(u'').if_parameter(u'Channel Mode').has_value(u'Left').else_use(u'Right Inv').if_parameter(u'Mute').has_value(u'Off'),
                                         use(u'Channel Mode').if_parameter(u'Mute').has_value(u'Off'),
                                         use(u'').if_parameter(u'Mute').has_value(u'On').else_use(u'').if_parameter(u'Channel Mode').has_value(u'Left').else_use(u'').if_parameter(u'Channel Mode').has_value(u'Right').else_use(u'').if_parameter(u'Mono').is_available(True).and_parameter(u'Mono').has_value(u'On').else_use(u'Stereo Width').if_parameter(u'Stereo Width').is_available(True).else_use(u'Mid/Side Balance'),
                                         use(u'').if_parameter(u'Mute').has_value(u'On').else_use(u'').if_parameter(u'Channel Mode').has_value(u'Left').else_use(u'').if_parameter(u'Channel Mode').has_value(u'Right').else_use(u'Mono'),
                                         use(u'Balance').if_parameter(u'Mute').has_value(u'Off'),
                                         use(u'').if_parameter(u'Mute').has_value(u'On').else_use(u'Gain').if_parameter(u'Gain').is_available(True).else_use(u'Gain (Legacy)'),
                                         u'Mute')}), (u'Low Freq', {BANK_PARAMETERS_KEY: (use(u'').if_parameter(u'Mute').has_value(u'On').else_use(u'').if_parameter(u'Channel Mode').has_value(u'Left').else_use(u'').if_parameter(u'Channel Mode').has_value(u'Right').else_use(u'').if_parameter(u'Mono').is_available(True).and_parameter(u'Mono').has_value(u'On').else_use(u'Bass Mono').if_parameter(u'Bass Mono').is_available(True),
                                         use(u'').if_parameter(u'Mute').has_value(u'On').else_use(u'').if_parameter(u'Channel Mode').has_value(u'Left').else_use(u'').if_parameter(u'Channel Mode').has_value(u'Right').else_use(u'').if_parameter(u'Mono').is_available(True).and_parameter(u'Mono').has_value(u'On').else_use(u'Bass Freq').if_parameter(u'Bass Freq').is_available(True),
                                         u'',
                                         use(u'DC Filter').if_parameter(u'Mute').has_value(u'Off'),
                                         u'',
                                         u'',
                                         u'',
                                         u'')}))),
 u'Vinyl': IndexedDict(((u'Global', {BANK_PARAMETERS_KEY: (u'Tracing On',
                                    use(u'Tracing Drive').if_parameter(u'Tracing On').has_value(u'On'),
                                    use(u'Tracing Freq.').if_parameter(u'Tracing On').has_value(u'On'),
                                    use(u'Tracing Width').if_parameter(u'Tracing On').has_value(u'On'),
                                    u'Pinch On',
                                    u'Global Drive',
                                    u'Crackle Density',
                                    u'Crackle Volume')}), (u'Pinch', {BANK_PARAMETERS_KEY: (u'Pinch On',
                                    use(u'Pinch Soft On').if_parameter(u'Pinch On').has_value(u'On'),
                                    use(u'Pinch Mono On').if_parameter(u'Pinch On').has_value(u'On'),
                                    use(u'Pinch Width').if_parameter(u'Pinch On').has_value(u'On'),
                                    use(u'Pinch Drive').if_parameter(u'Pinch On').has_value(u'On'),
                                    use(u'Pinch Freq.').if_parameter(u'Pinch On').has_value(u'On'),
                                    u'Crackle Density',
                                    u'Crackle Volume')}))),
 u'Vocoder': IndexedDict(((BANK_MAIN_KEY, {BANK_PARAMETERS_KEY: (u'Formant Shift',
                                      u'Attack Time',
                                      u'Release Time',
                                      u'Unvoiced Level',
                                      u'Gate Threshold',
                                      u'Filter Bandwidth',
                                      u'Envelope Depth',
                                      u'Dry/Wet')}),
              (u'Carrier', {BANK_PARAMETERS_KEY: (u'Noise Rate',
                                      u'Noise Crackle',
                                      u'Upper Pitch Detection',
                                      u'Lower Pitch Detection',
                                      u'Oscillator Pitch',
                                      u'Oscillator Waveform',
                                      u'',
                                      u'')}),
              (u'Global', {BANK_PARAMETERS_KEY: (u'Formant Shift',
                                      u'Attack Time',
                                      u'Release Time',
                                      u'Mono/Stereo',
                                      u'Output Level',
                                      u'Gate Threshold',
                                      u'Envelope Depth',
                                      u'Dry/Wet')}),
              (u'Filters/Voicing', {BANK_PARAMETERS_KEY: (u'Filter Bandwidth',
                                      u'Upper Filter Band',
                                      u'Lower Filter Band',
                                      u'Precise/Retro',
                                      u'Unvoiced Level',
                                      u'Unvoiced Sensitivity',
                                      u'Unvoiced Speed',
                                      u'Enhance')})))}
PARAMETERS_BLACKLIST_FOR_CPP_SANITY_CHECK = {u'OriginalSimpler': (u'Start',
                      u'End',
                      u'Sensitivity',
                      u'Mode',
                      u'Playback',
                      u'Pad Slicing',
                      u'Multi Sample',
                      u'Warp',
                      u'Warp Mode',
                      u'Voices',
                      u'Preserve',
                      u'Loop Mode',
                      u'Envelope',
                      u'Grain Size Tones',
                      u'Grain Size Texture',
                      u'Flux',
                      u'Formants',
                      u'Envelope Complex Pro',
                      u'Gain'),
 u'InstrumentVector': (u'Osc 1 Effect Type',
                       u'Osc 2 Effect Type',
                       u'Osc 1 Table',
                       u'Osc 2 Table',
                       u'Osc 1 Category',
                       u'Osc 2 Category',
                       u'Osc 1 Pitch',
                       u'Osc 2 Pitch',
                       u'Unison Mode',
                       u'Mono On'),
 u'Delay': (u'L Sync Enum', u'R Sync Enum')}
